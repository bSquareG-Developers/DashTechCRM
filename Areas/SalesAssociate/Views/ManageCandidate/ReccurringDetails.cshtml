
@{ ViewBag.Title = "Reccurring Details";
    Layout = "~/Views/Shared/_Layout.cshtml"; }



<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }
</style>


<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseCandidateRecurring" role="button" aria-expanded="true" aria-controls="collapseCandidateRecurring"> <i class="fa fa-filter"></i> Candidate Recurring   <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseCandidateRecurring" class="collapse show">
                    <div class="row">
                        <div class="col-xl-12">
                            <h4 class="mt-0 header-title mb-4">Candidate Recurring</h4>
                            <div class='rowCount' id="rowCount"></div>
                            <div id="gridCandidateList"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="loadpanel"></div>
<script>
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");
    $(function () {
        getRecurringDetails();
    });

    function getRecurringDetails() {

        //start getting data from GetCandidateList
        loadPanel.show();
        $.getJSON("@Url.Action("GetRecurringJson", "ManageCandidate", new { @area = "SalesAssociate" })", null, function (data) {
            loadPanel.hide();
            var dataGrid = $("#gridCandidateList").dxDataGrid({
                dataSource: data,
                columns: [
                    { dataField: "RecurringEdit", caption: "Recurring Edit", width: 100,type:'buttons',alignment:'center',
                        cellTemplate: function (container, options) {
                            $('<i class="fa fa-info-circle" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                        showData(options.data.RefCandidateId);
                                    })
                                .appendTo(container);
                        }
                    },
                    { dataField: "CandidateName", caption: "Candidate Name",alignment:'center', width: 140, dataType:'string' },
                    { dataField: "EnrolledDate", caption:'Enrolled Date', alignment: "center", dataType: "date", sortIndex: 0, sortOrder: "desc", width: 120,format:'dd MMM yyyy'},

                    { dataField: "DueDate", caption:'Due Date', alignment: "center", dataType: "date", width: 120,format:'dd MMM yyyy' },
                    { dataField: "PaidDate", caption:'Paid Date', alignment: "center", dataType: "date", width: 120, format: 'dd MMM yyyy'  },
                    { dataField: "EmailId", caption:'Email Id', alignment: "center", dataType:'string',width: 180 },
                    { dataField: "TotalAmount", caption:'Total Amount', alignment: "right", format: "currency", width: 100,dataType:'string'},
                    { dataField: "PaidAmount", caption:'Paid Amount', alignment: "right", format: "currency", width: 100,dataType:'string'},
                    { dataField: "Amount", caption: "Recurring Amount", alignment: "right", width: 150, format: "currency", dataType: 'string' },
                    { dataField: "ReceivedIn", caption: "Received In", width: 150, alignment:'center', dataType: 'string' },
                    { dataField: "PaymentStatus", caption: "Payment Status", width: 150, alignment: "center", dataType: 'string'},
                    { dataField: "ServiceName", caption: "Service Name", width: 120, alignment: "center",  cellTemplate: function (container, options) {
                            var str = "";
                            if (options.value === "AOG (Art Of Getting Job)")
                                str = "AOG M";
                            else if (options.value === "AOG (Art Of Getting Job) Training + Marketing")
                                str = "AOG TM";
                            else if (options.value === "Training")
                                str = "AOG T";

                            $("<div>").append($("<b>" + str + "</b>")).appendTo(container);
                        }
                    }],
                summary: {
                    groupItems: [
                        { column: "CandidateName", summaryType: "count", displayFormat: "{0} Payments" },
                        { column: "TotalAmount", summaryType: "max", valueFormat: "currency", showInGroupFooter: false, alignByColumn: true },
                        { column: "PaidAmount", summaryType: "sum", valueFormat: "currency", showInGroupFooter: false, alignByColumn: true }
                    ],
                    totalItems: [
                        { column: "CandidateName", summaryType: "count" },
                        { column: "PaidAmount", summaryType: "sum" }
                    ]
                },
                columnsAutoWidth: true,
                wordWrapEnabled: true,
                rowAlternationEnabled: true,
                showBorders: true,
                grouping: { autoExpandAll: true },
                paging: { pageSize: 10 },
                pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                headerFilter: { visible: true },
                filterRow: { visible: true, applyFilter: "auto" },
                allowColumnResizing: true,
                groupPanel: { visible: true },
                searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                export: {
                    enabled: true,
                    fileName: "Pending Candidate List",
                    allowExportSelectedData: true,
                    customizeExcelCell: options => {
                        if (options.gridCell.rowType === "header") {
                            options.backgroundColor = _dxGridHeaderBGColor;
                            options.font.color = _dxGridHeaderColor;
                        }
                    }
                },
                selection: { mode: "multiple" },
                allowColumnReordering: true,
                columnFixing: { enabled: false },
                columnChooser: {
                    enabled: true,
                    mode: "select",
                    allowSearch: true
                },
                onExporting: function(e) {
                    e.component.beginUpdate();
                    e.component.columnOption("RecurringEdit", "visible", false);
                },
                onExported: function(e) {
                    e.component.columnOption("RecurringEdit", "visible", true);
                    e.component.endUpdate();
                },
                onCellPrepared: function(e) {
                    if (e.rowType === "header") {
                        e.cellElement.css("text-align", "center");
                        e.cellElement.css("font-weight", "bold");
                    }
                    if (e.rowType === "group") {
                        e.cellElement.css("text-align", "center");
                    }
                },
                onContentReady(e) {
                    jQuery('#rowCount').html('Total Records : ' + jQuery("#gridCandidateList").dxDataGrid('instance').totalCount());
                }
            }).dxDataGrid('instance');



            function getOrderDay(rowData) {
                return (new Date(rowData.OrderDate)).getDay();
            }

        });
        //end getting data from GetCandidateTimeLine

    }
    function showData(id) {
        // $("#modal-default-comment").modal("show");
        $("#recurringid").val(id);
        window.location.href = "@Url.Action("RecurringList","ManageCandidate",new { @area = "SalesAssociate"})?id="+id;
    }
</script>

<div class="modal fade" id="modal-default-comment" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Recurring Details</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("RecurringPayment","ManageCandidate",new { @area = "reports"})" method="get">
                    <input type="hidden" name="recurringid" id="recurringid" />
                    <table class="table table-responsive">
                        <tr>
                            <td>Payment Status</td>
                            <td>
                                @{ string[] strRec = { "Paid", "UnPaid", "Refund", "Dispute" }; }

                                <select class="form-control" id="status" name="status">
                                    @foreach (string st in strRec)
                                    {
                        <option value="@st">@st</option>}
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>Received In</td>
                            <td>
                                @{ string[] recInList = { "PayPal", "Stripe", "US Bank", "Cheque", "India Bank", "Cash" }; }
                                }
                                <select class="form-control" id="status" name="status">
                                    @foreach (string r in recInList)
                                    {
                        <option value="@r">@r</option>}
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>Remarks</td>
                            <td>
                                <textarea class="form-control" id="message" name="remarks"></textarea>
                            </td>
                        </tr>
                        <tr>
                            <td class="" colspan="2" align="right">
                                <button class="btn btn-primary">Save</button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
