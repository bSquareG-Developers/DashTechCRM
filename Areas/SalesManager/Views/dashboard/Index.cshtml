
@{ ViewBag.Title = "Sales Associate";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }

    .modal-xl {
        max-width: 1200px;
    }
</style>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseTodayCandidateList" role="button" aria-expanded="true" aria-controls="collapseTodayCandidateList"> <i class="fa fa-filter"></i> Today's Candidate TimeLine Report   <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseTodayCandidateList" class="collapse show">
                    <div class="row">
                        <div class="col-xl-12">
                            <h4 class="mt-0 header-title mb-4">Today's Candidate TimeLine Report</h4>
                            <div class="rowCount" id="rowCount1"></div>
                            <div id="gridNewCandidateTimeLineReport"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseCandidateList" role="button" aria-expanded="false" aria-controls="collapseCandidateList"> <i class="fa fa-filter"></i> Candidate TimeLine Report <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseCandidateList" class="collapse">
                    <div class="row">
                        <div class="col-xl-12">
                            <h4 class="mt-0 header-title mb-4">Candidate TimeLine Report</h4>
                            <div class="rowCount" id="rowCount"></div>
                            <div id="gridCandidateTimeLineReport"></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="loadFollowups">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Follow Up Status Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="col-lg-12">
                    <div class="rowCount" id="rowCount3"></div>
                    <div id="gridFollowups"></div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>


<div class="modal fade bs-example-modal-sm" id="modal-status" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Change Status</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="modal-body">
                    <form action="@Url.Action("ChangeStatus","dashboard",new { @area = "SalesManager"})" method="post">
                        <input type="hidden" name="candidateId" id="candidateId" />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="box box-default">


                                    <div class="box-body">

                                        <table class="table">
                                            <tr>
                                                <td>Status</td>
                                                <td>
                                                    @{ string[] strRec = { "Dropped", "On Hold", "In Training", "Rebuild Resume", "Not Responding" }; }

                                                    <select class="form-control select2" id="status" name="status">
                                                        <option></option>
                                                        @foreach (string st in strRec)
                                                        {
                                            <option value="@st">@st</option>
}
                                                    </select>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td>Remarks</td>
                                                <td>
                                                    <textarea class="form-control" id="remarks" name="remarks"></textarea>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="" colspan="2" align="right">
                                                    <button class="btn btn-primary">Save</button>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="loadpanel"></div>
<script>
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");

    let followUpColumns = [
        { dataField: 'FollowUpBy', caption: 'FollowUp By', alignment: 'center', dataType: 'string', width: '100px', format: '' },
        { dataField: 'FollowUpDate', caption: 'FollowUp Date', alignment: 'center', dataType: 'date', width: '100px', format: 'dd MMM yyyy' },
        { dataField: 'FollowUpTime', caption: 'FollowUp Time', alignment: 'center', dataType: 'string', width: '100px', format: '' },
        { dataField: 'FollowUpMessage', caption: 'FollowUp Message', alignment: 'center', dataType: 'string', width: '180px', format: '' },
        { dataField: 'Department', caption: 'Department', alignment: 'center', dataType: 'string', width: '100px', format: '', groupIndex: 1 },
        { dataField: 'FollowUpStatus', caption: 'FollowUp Status', alignment: 'center', dataType: 'string', width: '100px', format: '' }
    ];
    let columnsDetails = [
        { dataField: "EnrolledDate", alignment: "center", caption: "Enrolled", dataType: "date", format: 'dd MMM yyyy', sortIndex: 0, sortOrder: "desc", width: 120 },
        { dataField: "CandidateName", caption: "Candidate Name", alignment: "center", width: 120, dataType: "string" },
        { dataField: "EmailId", caption: "Email Id", alignment: "center", width: 120, dataType: "string" },
        { dataField: "MobileNumber", caption: "Mobile No", alignment: "center", width: 150, dataType: "string" },
        {
            dataField: "CandidateStatus",
            caption: "Status",
            width: 120,
            alignment: "center",
            dataType: "string",
            cellTemplate: function(container, options) {
                $('<i class="fa fa-info-circle" aria-hidden="true" style="cursor: pointer; font-size: 20px;"></i>').text('').on('dxclick',
                        function() {
                            showData(options.data.CandidateId);
                        }).append($("<span>", { "text": " ", "style": "font-size:14px;margin-left:10px;padding-bottom:10px" }))
                    .appendTo(container);
            }
        },
        { dataField: "TeamLeadName", caption: "TL", width: 120, alignment: "center", dataType: "string" },
        { dataField: "SalesAssociateName", caption: "Associate", width: 150, alignment: "center", dataType: "string" },
        {
            dataField: "AgreementSent",
            caption: "Sent?",
            alignment: "center",
            type: "buttons",
            width: 60,
            dataType: "string",
            cellTemplate: function(container, options) {
                $("<div>")
                    .append($("<img>", { "src": options.value === "N/A" ? "/Content/icons/uncheck32px.png" : (options.value === "true" ? "/Content/icons/check32px.png" : "/Content/icons/uncheck32px.png"), width: "15px" }))
                    .appendTo(container);
            }
        },
        { dataField: "Agreement", alignment: "center", caption: "Per(%)", width: 120, dataType: "string" },
        { dataField: "TotalAmount", alignment: "right", caption: "$ Total", width: 120, dataType: "string" },
        { dataField: "PaidAmount", caption: "$ Paid", alignment: "right", width: 120, dataType: "string" },
        {
            caption: "Service Name",
            dataField: "ServiceName",
            width: 120,
            alignment: "center",
            dataType: "string",
            cellTemplate: function(container, options) {
                var str = "";
                if (options.value === "AOG (Art Of Getting Job)") {
                    str = "AOG M";
                } else if (options.value === "AOG (Art Of Getting Job) Training + Marketing") {
                    str = "AOG TM";
                } else if (options.value === "Training") {
                    str = "AOG T";
                }
                $("<div>")
                    .append($("<b>" + str + "</b>"))
                    .appendTo(container);
            }
        }, { dateField: "PODate", caption: "PO Date", width: 100, alignment: "center", dataType: "string" }
    ];


    $(function() {
        showNewCandidateData();
        showCandidateData();
    });

    function showNewCandidateData() {
        loadPanel.show();
        $.getJSON("@Url.Action("GetCandidate", "dashboard", new {@area = "SalesManager"})?date=@DateTime.Now.ToString("yyyy-MM-dd")",
            { "date": "@DateTime.Now.ToString("yyyy-MM-dd")" },
            function(data) {
                loadPanel.hide();
                var dataGrid = $("#gridNewCandidateTimeLineReport").dxDataGrid({
                    dataSource: data,
                    columns: columnsDetails,
                    summary: {
                        totalItems: [
                            { column: "PaidAmount", summaryType: "sum", valueFormat: "currency" },
                            { column: "TotalAmount", summaryType: "sum", valueFormat: "currency" }
                        ],
                        groupItems: [{ column: "CandidateName", summaryType: "count" }]
                    },
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Pending Candidate List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount1').html('Total Records : ' + jQuery("#gridNewCandidateTimeLineReport").dxDataGrid('instance').totalCount());
                    }

                }).dxDataGrid('instance');
            });
        //end getting data from GetNewCandidateTimeLine

    }

    function showCandidateData() {
        loadPanel.show();
        $.getJSON("@Url.Action("GetCandidate", "dashboard", new {@area = "SalesManager"})",
            null,
            function (data) {
                loadPanel.hide();
                var dataGrid = $("#gridCandidateTimeLineReport").dxDataGrid({
                    dataSource: data,
                    columns: columnsDetails,
                    summary: {
                        totalItems: [
                            { column: "PaidAmount", summaryType: "sum", valueFormat: "currency" },
                            { column: "TotalAmount", summaryType: "sum", valueFormat: "currency" }
                        ],
                        groupItems: [{ column: "CandidateName", summaryType: "count" }]
                    },
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    export: {
                        enabled: true,
                        fileName: "Pending Candidate List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("AgreementSent", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("AgreementSent", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount').html('Total Records : ' + jQuery("#gridCandidateTimeLineReport").dxDataGrid('instance').totalCount());
                    }

                }).dxDataGrid('instance');

            });

        //end getting data from GetCandidateTimeLine

    }

    function showData(cid) {

        $.getJSON("@Url.Action("GetFollowUpJson", "ManageCandidate", new {@area = "SalesAssociate"})",
            { id: cid },
            function(data) {
                var url = "@Url.Action("GetFollowUpJson", "ManageCandidate", new {@area = "SalesAssociate"})";
            $("#loadFollowups").modal("show");
            var dataGrid = $("#gridFollowups").dxDataGrid({
                dataSource: data,
                columnsAutoWidth: false,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                wordWrapEnabled: true,
                rowAlternationEnabled: true,
                selection: { mode: "multiple"},
                filterRow: { visible: true, applyFilter: "auto"},
                export: {
                    enabled: true,
                    fileName: "Follow Up Status Details", allowExportSelectedData: true,
                    customizeExcelCell: options => {
                        if (options.gridCell.rowType === "header") {
                            options.backgroundColor = _dxGridHeaderBGColor;
                            options.font.color = _dxGridHeaderColor;
                        }
                    }},
                grouping: { autoExpandAll: true},
                groupPanel: { visible: true },
                columns: followUpColumns,
                onCellPrepared: function (e) {
                    if (e.rowType === "header") {
                        e.cellElement.css("text-align", "center");
                        e.cellElement.css("font-weight", "bold");
                    }
                    if (e.rowType === "group") {
                        e.cellElement.css("text-align", "center");
                    }
                },
                headerFilter: { visible: true },
                onContentReady(e) {
                    jQuery('#rowCount3').html('Total Records : ' + jQuery("#gridFollowups").dxDataGrid('instance').totalCount() );
                }
            }).dxDataGrid("instance");
        });
    }

</script>
