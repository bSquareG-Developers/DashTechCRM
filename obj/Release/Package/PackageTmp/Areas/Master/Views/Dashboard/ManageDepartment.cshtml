
@{ ViewBag.Title = "ManageDepartment";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<style>
    .parsley-error, .parsley-required {
        color: #F16C69;
    }
</style>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseDepartment"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseDepartment">
                    <i class="fa fa-filter"></i> Manage Department
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseDepartment" class="collapse show">
                    <div class="row">
                        <div class="col-md-6">
                            <h4 class="mt-0 header-title mb-4"> List Department</h4>
                            <div class="rowCount" id="rowCount1"></div>
                            <div id="gridManageDepartment"></div>
                        </div>
                        <div class="col-md-6">
                            <h4 class="mt-0 header-title mb-4"> List Department wise role</h4>
                            <div class="rowCount" id="rowCount2"></div>
                            <div id="gridDepartmentwiserole"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseManageTeam"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseManageTeam">
                    <i class="fa fa-filter"></i> Manage Team
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseManageTeam" class="collapse show">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Leader Name :</label>
                                <select id="ddlLeaderId" name="ddlLeaderId" class="form-control select2"></select>
                                <span id="reqLeaderId" class="parsley-required" style="display: none"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Team Name :</label>
                                <input type="text" id="txtTeamName" name="txtTeamName" class="form-control" />
                                <span id="reqTeamName" class="parsley-required" style="display: none"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Reporting Person :</label>
                                <select id="ddlReportingPersonId" name="ddlReportingPersonId" class="form-control select2"></select>
                                <span id="reqddlReportingPersonId" class="parsley-required" style="display: none"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Department</label>
                                <select id="ddlDepartment" name="ddlDepartment" class="form-control select2"></select>
                                <span id="reqDepartment" class="parsley-required" style="display: none"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <button class="btn btn-primary btn-block" id="btnSubmit"> Create Team</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4 class="mt-0 header-title mb-4"> Team Master</h4>
                            <div class="rowCount" id="rowCount3"></div>
                            <div id="gridGetTeamDetails"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseTeamDetails"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseTeamDetails">
                    <i class="fa fa-filter"></i> Manage Team Details
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseTeamDetails" class="collapse show">

                    <div class="row">
                        <div class="col-md-2 mb-2">
                            <h4 class="mt-0 header-title mb-4"> Manage Team Details</h4>
                            <button class="btn btn-primary btn-block" id="btnAddMemberInTeam">Add Member in Team</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">

                            <div class="rowCount" id="rowCount4"></div>
                            <div id="gridGetTeamManageDetails"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modalAddMemberTeam" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Add Member in Team</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Team Name</label>
                            <select id="ddlTeamName" class="form-control select2"></select>
                            <span id="reqTeam" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Team Member</label>
                            <select id="ddlTeamMember" class="form-control select2"></select>
                            <span id="reqTeamMember" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <Button class="btn btn-block btn-primary" id="btnsaveMemberinTeam">Add Memeber</Button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modalUserchangeRoleDepartment" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Role wise department</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Change Role</label>
                            <select id="ddlChangeRole" class="form-control select2"></select>
                            <span id="reqddlChangeRole" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Change Department</label>
                            <select id="ddlchangeDepartment" class="form-control select2"></select>
                            <span id="reqddlchangeDepartment" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    let DepartmentList = [];
    let DepartmentArr = [];
    let TeamArr = [];
    let UserWithRole = [];
    $('[data-mask]').inputmask();
    $('.select2').select2();
    $(function() {
        bindDepartment();
        bindDepartmentRoleWise();
        BindUserWithRole();
        GetTeamDetails();
        BindTeamDetailsManage();
        BindTeamList();
        BindRemainingMembers();
        GetRoles();
    });

    function GetRoles() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetRoles")",
            success: function(data) {
                data = JSON.parse(data);
                jQuery('#ddlChangeRole').empty();
                jQuery('#ddlChangeRole').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#ddlChangeRole').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }
    function BindUserWithRole() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetUserwithRole")",
            success: function(response) {
                response = JSON.parse(response);
                jQuery('#ddlLeaderId').empty();
                jQuery('#ddlLeaderId').append('<option value="">Select</option>');
                jQuery.each(response,
                    function(i, v) {
                        jQuery('#ddlLeaderId').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });

                jQuery('#ddlReportingPersonId').empty();
                jQuery('#ddlReportingPersonId').append('<option value="">Select</option>');
                jQuery.each(response,
                    function(i, v) {
                        jQuery('#ddlReportingPersonId').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });

            }
        });
    }
    function BindDepartmentDropdown() {
        jQuery('#ddlDepartment').empty();
        jQuery('#ddlDepartment').append('<option value="">Select</option>');
        jQuery.each(DepartmentList,
            function(i, v) {
                jQuery('#ddlDepartment').append('<option value="' + v.Id + '">' + v.DepartmentName + '</option>');
            });

        jQuery('#ddlchangeDepartment').empty();
        jQuery('#ddlchangeDepartment').append('<option value="">Select</option>');
        jQuery.each(DepartmentList,
            function(i, v) {
                jQuery('#ddlchangeDepartment').append('<option value="' + v.Id + '">' + v.DepartmentName + '</option>');
            });


    }
    function bindDepartment() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("BindDepartment")",
            success: function(data) {
                data = JSON.parse(data);
                DepartmentArr = data.map(x => x.DepartmentName);
                DepartmentList = data;

                BindDepartmentDropdown();
                var dataGrid = $("#gridManageDepartment").dxDataGrid({
                    dataSource: data,
                    columns: [
                        { dataField: 'Id', caption: 'Id', alignment: 'center', dataType: 'string', width: 120, format: '', type: 'Buttons' },
                        { dataField: 'DepartmentName', caption: 'Department Name', alignment: 'center', dataType: '', width: 200, format: '', validationRules: [{ type: "required" }] }
                    ],
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    export: {
                        enabled: true,
                        fileName: "Department List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    columnFixing: { enabled: false },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    editing: {
                        mode: "row",
                        allowUpdating: true,
                        allowAdding: true
                    },
                    onRowInserted: function(e) {
                        param = e.data;
                        if (!ExistDepartment(param.DepartmentName)) {
                            $.ajax({
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                url: "@Url.Action("Department_Insert")",
                                data: "{parameter:'" + JSON.stringify(param) + "'}",
                                success: function(data) {
                                    if (data === "True")
                                        DevExpress.ui.notify("Record Inserted Successfully Successfully ..!!", "success", 5000);
                                    else
                                        DevExpress.ui.notify("Something went wrong please try after some time ..!!", "Error", 5000);
                                    bindDepartment();
                                    bindDepartmentRoleWise();
                                    BindUserWithRole();
                                    GetTeamDetails();
                                }
                            });
                        } else {
                            DevExpress.ui.notify("Department Already Exists ..!!", "Error", 5000);
                        }
                    },
                    onRowUpdated: function(e) {
                        param = e.data;
                        if (!ExistDepartment(param.DepartmentName)) {
                            $.ajax({
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                url: "@Url.Action("Department_Update")",
                                data: "{parameter:'" + JSON.stringify(param) + "'}",
                                success: function (data) {
                                    if (data === "True")
                                        DevExpress.ui.notify("Record Updated Successfully Successfully ..!!", "success", 5000);
                                    else
                                        DevExpress.ui.notify("Something went wrong please try after some time ..!!", "Error", 5000);
                                    bindDepartment();
                                    bindDepartmentRoleWise();
                                    BindUserWithRole();
                                    GetTeamDetails();
                                }
                            });
                        } else {
                            DevExpress.ui.notify("Department Already Exists ..!!", "Error", 5000);
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount1').html('Total Records : ' + jQuery("#gridManageDepartment").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }
        });
    }
    function bindDepartmentRoleWise() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("BindDepartmentwiseRole")",
            success: function(data) {
                data = JSON.parse(data);

                var dataGrid = $("#gridDepartmentwiserole").dxDataGrid({
                    dataSource: data,
                    columns: [
                        { dataField: 'RoleTitle', caption: 'Role Title', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'DepartmentName', caption: 'Department Name', alignment: 'center', dataType: '', width: 200, format: '' },
                        { dataField: 'Edit', caption: 'Edit', alignment: 'center', dataType: 'string', width: 120, format: '',type:'buttons',cellTemplate: function (container, options) {
                                $('<i class="fa fa-edit" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                        changeDepartmentRole(options.data);
                                    }).appendTo(container);

                            } }
                    ],
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 5 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [5, 10, 15, 20] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    export: {
                        enabled: true,
                        fileName: "Department List Role wise",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    columnFixing: { enabled: false },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount2').html('Total Records : ' + jQuery("#gridDepartmentwiserole").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }
        });
    }
    function GetTeamDetails() {
         $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetTeamDetails")",
            success: function(data) {
                data = JSON.parse(data);
                TeamArr = data,
                BindDepartmentDropdown();
                var dataGrid = $("#gridGetTeamDetails").dxDataGrid({
                    dataSource: data,

                    columns: [
                        { dataField: 'TeamName', caption: 'Team Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'LeaderName', caption: 'Department Name', alignment: 'center', dataType: '', width: 200, format: '' },
                        { dataField: 'ReportingPerson', caption: 'Reporting Person', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'DepartmentName', caption: 'Department Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'CreatedDate', caption: 'Created Date', alignment: 'center', dataType: 'date', width: 200, format: 'dd MMM yyyy' }
                    ],
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    export: {
                        enabled: true,
                        fileName: "Team List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    columnFixing: { enabled: false },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount3').html('Total Records : ' + jQuery("#gridGetTeamDetails").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }
        });
    }
    function BindTeamList() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("BindTeamList")",
            success: function(data) {
                data = JSON.parse(data);
                jQuery('#ddlTeamName').empty();
                jQuery('#ddlTeamName').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#ddlTeamName').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }
    function BindRemainingMembers() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("BindRemainingMembers")",
            success: function(data) {
                data = JSON.parse(data);
                jQuery('#ddlTeamMember').empty();
                jQuery('#ddlTeamMember').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#ddlTeamMember').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }
    function BindTeamDetailsManage() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetTeamDetailsManage")",
            success: function(data) {
                data = JSON.parse(data);
                var dataGrid = $("#gridGetTeamManageDetails").dxDataGrid({
                    dataSource: data,
                    columns: [
                        { dataField: 'Delete', caption: 'Delete', alignment: 'center', dataType: 'string', width: 120, format: '', cellTemplate: function (container, options) {
                                $('<i class="fa fa-trash" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                            //showFolloup(options.data.CandidateId);
                                        var result = DevExpress.ui.dialog.confirm("<i> Delete this .?</i>", "Are you sure? ");
                                            result.done(function(res) {
                                                if (res) {
                                                    param = {ID: options.data.Id}
                                                    $.ajax({
                                                        type: "POST",
                                                        contentType: "application/json; charset=utf-8",
                                                        url: "@Url.Action("TeamMember_Delete")",
                                                        data: "{parameter:'" + JSON.stringify(param) + "'}",
                                                        success: function(response) {
                                                            if (response === 'True')
                                                                DevExpress.ui.notify("Team Deleted successfully.!!", "success", 5000);
                                                            else
                                                                DevExpress.ui.notify("Somethig went wrong.!!", "warning", 5000);
                                                            setTimeout(function() {
                                                                    BindTeamDetailsManage();
                                                                },
                                                                2000);
                                                        }
                                                    });
                                                }
                                            });
                                    }).appendTo(container);

                            } },
                        { dataField: 'TeamName', caption: 'Team Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'LeaderName', caption: 'Leader Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'MemberName', caption: 'Member Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
                        { dataField: 'TeamCreatedDate', caption: 'Team Created Date', alignment: 'center', dataType: '', width: 200, format: '' },
                        { dataField: 'DepartmentName', caption: 'Department Name', alignment: 'center', dataType: '', width: 200, format: '' }
                    ],
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 5 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [5, 10, 15, 20] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    export: {
                        enabled: true,
                        fileName: "Team Details Manage",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    columnFixing: { enabled: false },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount4').html('Total Records : ' + jQuery("#gridGetTeamManageDetails").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }
        });
    }
    function ExistDepartment(departmentName) {
        return DepartmentArr.includes(departmentName);
    }
    function ExistTeam(newTeam) {
        return TeamArr.find(oldTeam => oldTeam.TeamName == newTeam.teamName && oldTeam.LeaderId == newTeam.leaderId && oldTeam.ReportingPersonId == newTeam.reportingPerson && oldTeam.DepartmentId == newTeam.department);
    }
    $('#ddlLeaderId').change(function(e) {
        let username = $("#ddlLeaderId :selected").text().split('-')[0] + 'Team';
        $('#txtTeamName').val(username);
    });
    $('#btnSubmit').click(function(e) {
        let leaderId = $('#ddlLeaderId').val();
        let teamName = $('#txtTeamName').val();
        let reportingPerson = $('#ddlReportingPersonId').val();
        let department = $('#ddlDepartment').val();
        if (!leaderId) {
            $('#reqLeaderId').text('Please select Leader');
            $('#reqLeaderId').show();
            return false;
        } else {
            $('#reqLeaderId').text('');
            $('#reqLeaderId').hide();
        }
        if (!reqTeamName) {
            $('#reqTeamName').text(`Team Name Can't be Blank..!!`);
            $('#reqTeamName').show();
            return false;
        } else {
            $('#reqTeamName').text('');
            $('#reqTeamName').hide();
        }
        if (!reportingPerson) {
            $('#reqddlReportingPersonId').text('Please select Reporting Person Name');
            $('#reqddlReportingPersonId').show();
            return false;
        } else {
            $('#reqddlReportingPersonId').text('');
            $('#reqddlReportingPersonId').hide();
        }
        if (!department) {
            $('#reqDepartment').text('Please select Department');
            $('#reqDepartment').show();
            return false;
        } else {
            $('#reqDepartment').text('');
            $('#reqDepartment').hide();
        }
        let param = { leaderId, teamName, reportingPerson, department }

        if (!ExistTeam(param)) {
            $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("saveTeam")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function(response) {
                if (response === 'True')
                    DevExpress.ui.notify("Team Created Successfully.!!", "success", 5000);
                else
                    DevExpress.ui.notify("Somethig went wrong.!!", "warning", 5000);
                setTimeout(function() {
                        bindDepartmentRoleWise();
                    BindUserWithRole();
                    $('#txtTeamName').val('');
                    },
                    2000);
            }
        });
        }
        else {
            DevExpress.ui.notify("Team Already Exists...!!", "Error", 5000);
        }
        return "";
    });

    $('#btnAddMemberInTeam').click(function (e) {
        BindTeamList();
        BindRemainingMembers();
        $('#modalAddMemberTeam').modal({ backdrop: 'static', keyboard: false });
    });
    $('#btnsaveMemberinTeam').click(function (e) {
        var teamId = $('#ddlTeamName').val() ? $('#ddlTeamName').val() : '';
        var teamMemberId = $('#ddlTeamMember').val() ? $('#ddlTeamMember').val() : '';

        if (!teamId) {
            $('#reqTeam').text('Please select Team');
            $('#reqTeam').show();
            return false;
        } else {
            $('#reqTeam').text('');
            $('#reqTeam').hide();
        }
        if (!teamMemberId) {
            $('#reqTeamMember').text('Please select Team Member');
            $('#reqTeamMember').show();
            return false;
        } else {
            $('#reqTeamMember').text('');
            $('#reqTeamMember').hide();
        }

        param = { teamId, teamMemberId }
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("SaveTeamMember")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function(response) {
                if (response === 'True')
                    DevExpress.ui.notify("Team Member Mapped successfully.!!", "success", 5000);
                else
                    DevExpress.ui.notify("Somethig went wrong.!!", "warning", 5000);
                setTimeout(function() {
                        BindTeamDetailsManage();
                        $('#modalAddMemberTeam').modal('hide');
                    },
                    2000);
            }
        });
    });

    function changeDepartmentRole(data) {
        console.log(data);
        $('#ddlchangeDepartment').val(data.DepartmentId);
        $('#ddlChangeRole').val(data.RoleId);
        $('#modalUserchangeRoleDepartment').modal({ backdrop: 'static', keyboard: false });
    }
</script>
