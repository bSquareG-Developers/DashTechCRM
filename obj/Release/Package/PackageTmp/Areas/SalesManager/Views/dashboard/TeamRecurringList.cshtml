
@{ ViewBag.Title = "Reccurring Details";
    Layout = "~/Views/Shared/_Layout.cshtml"; }


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseCandidateRecurring" role="button" aria-expanded="true" aria-controls="collapseCandidateRecurring"> <i class="fa fa-filter"></i> Candidate Recurring   <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div class="collapse show" id="collapseCandidateRecurring">
                    <div class="row">
                        <div class="col-xl-12 border-right">
                            <h4 class="mt-0 header-title mb-4">Candidate Recurring</h4>
                            <div id="gridCandidateList">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="modaldefaultcomment" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Recurring Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("RecurringPayment","ManageCandidate",new { @area = "reports"})" method="get">
                    <input type="hidden" name="recurringid" id="recurringid" />
                    <table class="table table-responsive">
                        <tr>
                            <td>Payment Status</td>
                            <td>
                                @{ string[] strRec = { "Paid", "UnPaid", "Refund", "Dispute" }; }
                                <select class="form-control" id="status" name="status">
                                    @foreach (string st in strRec)
                                    {
                        <option value="@st">@st</option>}
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>Received In</td>
                            <td>
                                @{ string[] recInList = { "PayPal", "Stripe", "US Bank", "Cheque", "India Bank", "Cash" }; }
                                <select class="form-control" id="status" name="status">
                                    @foreach (string r in recInList)
                                    {
                        <option value="@r">@r</option>}
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>Remarks</td>
                            <td>
                                <textarea class="form-control" id="message" name="remarks"></textarea>
                            </td>
                        </tr>
                        <tr>
                            <td class="" colspan="2" align="right">
                                <button class="btn btn-primary">Save</button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {

         //start getting data from GetCandidateList
        $.getJSON("@Url.Action("GetTeamRecurringJson", "dashboard", new { @area = "SalesManager" })", null, function (data) {
            //alert(data);
            var dataGrid = $("#gridCandidateList").dxDataGrid({
                dataSource: data,
                columnsAutoWidth: false,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                wordWrapEnabled: true,
                selection: { mode: "multiple" },
                filterRow: { visible: true, applyFilter: "auto" },
                export: {
                    enabled: true,
                    fileName: "Candidate Recurring", allowExportSelectedData: true,
                    customizeExcelCell: options => {
                        if (options.gridCell.rowType === "header") {
                            options.backgroundColor = _dxGridHeaderBGColor;
                            options.font.color = _dxGridHeaderColor;
                        }
                    }
                },
                grouping: { autoExpandAll: true },
                groupPanel: { visible: true },
                searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                onExporting: function (e) {
                    e.component.beginUpdate();
                    e.component.columnOption("RecurringId", "visible", false);
                },
                onExported: function (e) {
                    e.component.columnOption("RecurringId", "visible", true);
                    e.component.endUpdate();
                },
                onCellPrepared: function (e) {
                    if (e.rowType === "header") {
                        e.cellElement.css("text-align", "center");
                        e.cellElement.css("font-weight", "bold");
                    }
                    if (e.rowType === "group") {
                        e.cellElement.css("text-align", "center");
                    }
                },
                headerFilter: { visible: true },
                scrolling: { columnRenderingMode: "virtual" },
                columns: [
                    { dataField: "RecurringId", caption: "Recurring Manage", width: 100, alignment: "center", dataType: "string",
                        cellTemplate: function (container, options) {
                            $('<i class="fa fa-info-circle" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                function () {
                                    showData(options.data.RecurringId);
                                })
                                .appendTo(container);
                        }
                    },
                    { dataField: "CandidateName", caption: "Candidate Name", alignment: "center", dataType: "string", width: 140, groupIndex: 0 },
                    { dataField: "EnrolledDate", caption: 'Enrolled Date', alignment: "right", dataType: "date", width: 160, sortIndex: 0, sortOrder: "desc", format: 'dd MMM yyyy'},
                    { dataField: "DueDate", caption: 'Due Date', alignment: "right", dataType: "date", width: 120,sortIndex: 1, sortOrder: "desc",  format: 'dd MMM yyyy' },
                    { dataField: "PaidDate", caption: 'Paid Date', alignment: "right", dataType: "date", width: 120, format: 'dd MMM yyyy'  },
                    { dataField: "EmailId", caption: 'Email Id', alignment: "right", dataType: "string", width: 180, format: '' },
                    { dataField: "TotalAmount", caption: 'Total Amount', alignment: "right", dataType: "string", width: 100, format: "currency"},
                    { dataField: "PaidAmount", caption: 'Paid Amount', alignment: "right", dataType: "string", format: "currency", width: 100},
                    { dataField: "Amount", caption: "Recurring Amount", alignment: "right", dataType: "string", width: 140 },
                    { dataField: "PaymentStatus", caption: "Is Paid?", alignment: "center", dataType: "string", width: 140 },
                    { dataField: "ReceivedIn", caption: "Received In", alignment: "center", dataType: "string", width: 140 },
                    { dataField: "ServiceName", caption: "Service Name", alignment: "center", dataType: "string", width: 140,
                        cellTemplate: function (container, options) {
                            var str = "";
                            if (options.value === "AOG (Art Of Getting Job)") {
                                str = "AOG M";
                            }
                            else if (options.value === "AOG (Art Of Getting Job) Training + Marketing") {
                                str = "AOG TM";
                            }
                            else if (options.value === "Training") {
                                str = "AOG T";
                            }
                            $("<div>")
                                .append($("<b>" + str + "</b>"))
                                .appendTo(container);
                        }

                    }],
                summary: {
                    groupItems: [
                        { column: "CandidateName", summaryType: "count", displayFormat: "{0} Recurring" },
                        { column: "TotalAmount", summaryType: "max", valueFormat: "currency", displayFormat: "$ {0} ", showInGroupFooter: false, alignByColumn: true },
                        { column: "PaidAmount", summaryType: "max", valueFormat: "currency", displayFormat: "$ {0}", showInGroupFooter: false, alignByColumn: true }],
                    totalItems: [
                        { column: "EnrolledDate", summaryType: "count", displayFormat: "Total Recurring {0}" },
                        { column: "PaidAmount", summaryType: "sum" },
                        { column: "Amount", summaryType: "sum", valueFormat: "currency", displayFormat: " {0}", showInGroupFooter: false, alignByColumn: true }],

                    calculateCustomSummary: function (options) {
                            if (options.name === "Amount") {
                            if (options.summaryProcess === "start") {
                                options.totalValue = 0;
                            }
                            if (options.summaryProcess === "calculate") {

                                if (options.data.PaymentStatus === "Paid") {
                                    options.totalValue += options.value.Amount;
                                }
                            }
                        }
                    }
            }
        }).dxDataGrid('instance');
        });
    });
    function showData(id) {
        $("#modaldefaultcomment").modal("show");
        $("#recurringid").val(id);
    }
</script>
