
@{ ViewBag.Title = "Sales Associate";
    Layout = "~/Views/Shared/_Layout.cshtml"; }



<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }
</style>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseTodayCandidateList" role="button" aria-expanded="true" aria-controls="collapseTodayCandidateList"> <i class="fa fa-filter"></i> Today's Candidate TimeLine Report   <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseTodayCandidateList" class="collapse show">
                    <div class="row">
                        <div class="col-xl-12">
                            <a href="@Url.Action("AddCandidate", "ManageCandidate", new {@area = "SalesAssociate"})" class="btn btn-primary"><i class="fa fa-plus"></i>Add Candidate</a>
                            <h4 class="mt-3 header-title mb-4">Today's Candidate TimeLine Report</h4>
                            <div class='rowCount' id="rowCount"></div>
                            <div id="gridNewCandidateTimeLineReport"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseCandidateList" role="button" aria-expanded="true" aria-controls="collapseCandidateList"> <i class="fa fa-filter"></i> Candidate TimeLine Report   <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseCandidateList" class="collapse">
                    <div class="row">
                        <div class="col-xl-12">
                            <h4 class="mt-0 header-title mb-4">Candidate TimeLine Report</h4>
                            <div class='rowCount' id="rowCount1"></div>
                            <div id="gridCandidateTimeLineReport"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="bs-example-modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Add Follow Up</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="col-lg-10">
                    <form action="@Url.Action("ChangeStatus","ManageCandidate",new { @area = "SalesAssociate"})" method="post">
                        <input type="hidden" name="cid" id="cid" />
                        <table class="table">
                            <tr>
                                <td>Sales Status</td>
                                <td>
                                    <select class="form-control select2" id="status" name="status">
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td>Remarks</td>
                                <td>
                                    <textarea class="form-control" id="message" name="message"></textarea>
                                </td>
                            </tr>
                            <tr>
                                <td class="" colspan="2" align="right">
                                    <button class="btn btn-primary">Save</button>
                                </td>
                            </tr>
                        </table>
                    </form>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div class="modal fade " id="loadFollowups">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Follow Up Details :</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="col-lg-12">
                    <div id="gridFollowups"></div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div id="modalShowRecurringDetails" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">User Recurring Details : <span id="spnCandidateName"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-md-7">
                        <h5>Enrollment Details :</h5>
                        <table class="table table-responsive table-striped">
                            <tr>
                                <th>Paid Date</th>
                                <th>Paid Amount</th>
                                <th>Total Amount</th>
                                <th>Received In</th>
                                <th>Payment Status</th>
                            </tr>
                            <tr>
                                <td><span id="lblPaidDate"></span></td>
                                <td><span id="lblRecurringAmt"></span></td>
                                <td><span id="lblTotalAmt"></span></td>
                                <td><span id="lblReceivedIn"></span></td>
                                <td><span id="lblPaymentStatus"></span></td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-5">
                        <h5>Payment Details :</h5>
                        <table class="table table-responsive table-striped">
                            <tr>
                                <th>Paid Amount</th>
                                <th>UnPaid Amount</th>
                                <th>Status</th>
                            </tr>
                            <tr>
                                <td><span id="lblPaidAmount"></span> </td>
                                <td><span id="lblUnPaidAmount"></span> </td>
                                <td><span id="lblStatus"></span></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <h5>Recurring Details :</h5>

                <div class="row">
                    <div class="col-md-12">
                        <div id="gridContainer"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="loadpanel"></div>
<script>
    $('[data-mask]').inputmask();
    $('.select2').select2();
    var enrollmentDetails = {};
    var recurringdata = [];
    var reccuringTotal = 0;
    var grandPaidTotal = 0;
    var remainingTotal = 0;
    let PaymentStatusArr = [];
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");
    var CandidateId = 0;
    $(function() {
        getNewCandidates();
        getCandidates();
        BindFollowUpStatusSales();
    });

    function BindFollowUpStatusSales() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("BindFollowUpStatusSales")",
            success: function(data) {
                data = JSON.parse(data);
                jQuery('#status').empty();
                jQuery('#status').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#status').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }
    function getNewCandidates() {
        loadPanel.show();
        //start getting data from GetNewCandidateTimeLine
        @*$.getJSON("@Url.Action("GetNewCandidateTimeLine", "dashboard", new {@area = "salesassociate"})",
            null,
            function (data) {

            });*@
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetNewCandidateTimeLine")",
            success: function(data) {
                data = JSON.parse(data);
                loadPanel.hide();
                var dataGrid = $("#gridNewCandidateTimeLineReport").dxDataGrid({
                    dataSource: data,

                    columns: [
                        {
                            dataField: "Comment", caption: "Follow Up", width: 100, alignment: 'center', dataType: 'string', type: 'buttons',
                            cellTemplate: function (container, options) {
                                $('<i class="fa fa-edit" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                        function () {
                                            showFolloup(options.data.CandidateId);
                                        })
                                    .appendTo(container);
                            }
                        },
                        {
                            dataField: "View", caption: "View", width: 80, alignment: 'center', dataType: 'string', type: 'buttons',
                            cellTemplate: function (container, options) {
                                $('<i class="fa fa-info-circle" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                        function () {
                                            showData(options.data.CandidateId);

                                        })
                                    .appendTo(container);
                            }
                        },
                        {
                            dataField: 'viewRecurringDetails', caption: 'Reccuring Details', alignment: 'center', dataType: 'string', type: "buttons", width: 130, cellTemplate: function (container, options) {
                                $('<i class="fas fa-coins" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                        ShowRecurringDetails(options.data);
                                    }).appendTo(container);
                            }
                        },
                        { dataField: "CandidateName", caption: "Candidate Name", alignment: 'center', dataType: 'string', width: 140, format: '' },
                        {
                            dataField: "CandidateStatus", caption: "Candidate Status", alignment: "center",  width: 130,
                            cellTemplate: function (container, options) {
                                $('<i></i>').append(options.data.CandidateStatus).appendTo(container);
                            }
                        },
                        {
                            dataField: "AgreementSent", caption: "Agreement Sent?", alignment: "center", type: "buttons",
                            cellTemplate: function (container, options) {
                                if (options.data.AgreementSent) {
                                    jQuery('<span class="fa fa-check" style:"cursor:pointer">').text('').on('dxclick', function () {
                                    }).appendTo(container);
                                } else {
                                    jQuery('<span class="fa fa-times" style:"cursor:pointer">').text('').on('dxclick', function () {
                                    }).appendTo(container);
                                }

                            }
                        },
                        { dataField: "AgreementPercentage", caption: "Agreement Per(%)", alignment: "center", dataType: 'string', width: 140 },
                        { dataField: "EnrolledDate", caption: "Enrolled Date", alignment: "center", dataType: "date", sortIndex: 0, sortOrder: "desc", width: 140, format: 'dd MMM yyyy' },
                        { dataField: 'JobGaruntee', caption: 'Job guarantee Given', alignment: 'center', dataType: 'string', width: 150, format: '' },
                        { dataField: 'JobGarunteeLastDate', caption: 'Job guarantee Last Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
                        { dataField: "EmailId", caption: "Email Id", alignment: "center", dataType: 'string', width: 150 },
                        { dataField: "TotalAmount", caption: "Total Amount", alignment: "right", format: "currency", width: 100 },
                        { dataField: "PaidAmount", caption: "Paid Amount", alignment: "right", format: "currency", width: 100 },
                        {
                            dataField: "ServiceName", caption: "Service Name", alignment: 'center', dataType: 'string', width: 140,
                            cellTemplate: function (container, options) {
                                var str = "";
                                if (options.value === "AOG (Art Of Getting Job)") {
                                    str = "AOG M";
                                } else if (options.value === "AOG (Art Of Getting Job) Training + Marketing") {
                                    str = "AOG TM";
                                } else if (options.value === "Training") {
                                    str = "AOG T";
                                }
                                $("<div>")
                                    .append($("<b>" + str + "</b>"))
                                    .appendTo(container);
                            }
                        },
                        { dataField: 'PODate', caption: 'PO Date', alignment: 'center', dataType: 'date', width: 120, format: 'dd MMM yyyy' }
                    ],
                    summary: {
                        totalItems: [
                            { column: "TotalAmount", valueFormat: "currency", summaryType: "sum" },
                            { column: "PaidAmount", valueFormat: "currency", summaryType: "sum" }]
                    },
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Pending Candidate List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function (e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function (e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onRowPrepared: function (e) {
                        if (e.rowType === "data") {
                            if (e.data.IsCompletepaid)
                                e.rowElement.css('background', '#90EE90');

                        }
                    },
                    onCellPrepared: function (e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount').html('Total Records : ' + jQuery("#gridNewCandidateTimeLineReport").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }
        });
    }

    function getCandidates() {
        loadPanel.show();
        @*$.getJSON("@Url.Action("GetCandidateTimeLine", "dashboard", new {@area = "salesassociate"})",
            null,
            function (data) {


            });*@
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetCandidateTimeLine")",
            success: function (data) {
                loadPanel.hide();
                data = JSON.parse(data);
                var dataGrid = $("#gridCandidateTimeLineReport").dxDataGrid({
                    dataSource: data,

                    columns: [
                        {
                            dataField: "Comment", caption: "Follow up", width: 80, alignment: 'center', type: "buttons",
                            cellTemplate: function (container, options) {
                                $('<i class="fa fa-edit" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                        showFolloup(options.data.CandidateId);
                                    }).appendTo(container);
                            }

                        },
                        {
                            dataField: 'view', caption: 'view', alignment: 'center', dataType: 'string', type: "buttons", width: 80, cellTemplate: function (container, options) {
                                $('<i class="fa fa-info-circle" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                        showData(options.data.CandidateId);
                                    }).appendTo(container);
                            }
                        },
                        {
                            dataField: 'viewRecurringDetails', caption: 'Reccuring Details', alignment: 'center', dataType: 'string', type: "buttons", width: 130, cellTemplate: function (container, options) {
                                $('<i class="fas fa-coins" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                                    function () {
                                        ShowRecurringDetails(options.data);
                                    }).appendTo(container);
                            }
                        },

                        {
                            dataField: "CandidateStatus", caption: "Candidate Status",width: 130, alignment: 'center', dataType: 'string',
                            cellTemplate: function (container, options) {
                                $('<i></i>').append(options.data.CandidateStatus).appendTo(container);
                            }
                        },

                        {
                            dataField: "AgreementSent", caption: "Agreement Sent?", alignment: "center", type: "buttons", width: 130,
                            cellTemplate: function (container, options) {
                                if (options.data.AgreementSent) {
                                    jQuery('<span class="fa fa-check" style:"cursor:pointer">').text('').on('dxclick', function () {
                                    }).appendTo(container);
                                } else {
                                    jQuery('<span class="fa fa-times" style:"cursor:pointer">').text('').on('dxclick', function () {
                                    }).appendTo(container);
                                }

                            }
                        },
                        { dataField: "CandidateName", caption: "Candidate Name", width: 140, alignment: 'center', dataType: 'string' },
                        { dataField: "AgreementPercentage", caption: "Agreement Per(%)", alignment: "center", width: 150, dataType: 'string' },
                        { dataField: "EnrolledDate", caption: "Enrolled Date", alignment: "center", sortIndex: 1, sortOrder: "desc", dataType: "date", width: 140, format: 'dd MMM yyyy' },
                        { dataField: 'JobGaruntee', caption: 'Job guarantee Given', alignment: 'center', dataType: 'string', width: 150, format: '' },
                        { dataField: 'JobGarunteeLastDate', caption: 'Job guarantee Last Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
                        { dataField: "EmailId", caption: 'Email Id', alignment: "center", width: 180, dataType: 'string' },
                        { dataField: "TotalAmount", caption: 'Total Amount', alignment: "right", width: 100, format: "currency" },
                        { dataField: "PaidAmount", caption: 'Paid Amount', alignment: "right", width: 100, format: "currency" },
                        {
                            dataField: "ServiceName",
                            caption: "Service Name",
                            alignment: 'center',
                            width: 130,
                            cellTemplate: function (container, options) {
                                var str = "";
                                if (options.value === "AOG (Art Of Getting Job)")
                                    str = "AOG M";
                                else if (options.value === "AOG (Art Of Getting Job) Training + Marketing")
                                    str = "AOG TM";
                                else if (options.value === "Training")
                                    str = "AOG T";
                                $("<div>").append($("<b>" + str + "</b>")).appendTo(container);
                            }

                        },
                        { dataField: 'PODate', caption: 'PO Date', alignment: 'center', dataType: 'date', width: 120, format: 'dd MMM yyyy' }
                    ],
                    summary: {
                        totalItems: [
                            { column: "TotalAmount", valueFormat: "currency", summaryType: "sum" },
                            { column: "PaidAmount", valueFormat: "currency", summaryType: "sum" }]
                    },
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Candidate TimeLine Report",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    onRowPrepared: function (e) {
                        if (e.rowType === "data") {
                            if (e.data.IsCompletepaid)
                                e.rowElement.css('background', '#90EE90');

                        }
                    },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function (e) {
                        e.component.beginUpdate();
                        e.component.columnOption("view", "visible", false);
                        e.component.columnOption("Comment", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function (e) {
                        e.component.columnOption("view", "visible", true);
                        e.component.columnOption("Comment", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function (e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },

                    onContentReady(e) {
                        jQuery('#rowCount1').html('Total Records : ' + jQuery("#gridCandidateTimeLineReport").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }
        });
    }

    function showData(cid) {

        $.getJSON("@Url.Action("GetFollowUpJson", "ManageCandidate", new {@area = "SalesAssociate"})",
            { id: cid },
            function(data) {
                var url = "@Url.Action("GetFollowUpJson", "ManageCandidate", new {@area = "SalesAssociate"})";

                $("#loadFollowups").modal("show");
                var dataGrid = $("#gridFollowups").dxDataGrid({
                    dataSource: data,
                    allowColumnReordering: true,
                    showBorders: true,
                    grouping: {
                        autoExpandAll: true,
                    },
                    searchPanel: {
                        visible: true
                    },
                    paging: {
                        pageSize: 10
                    },
                    groupPanel: {
                        visible: true
                    },
                    columns: ["FollowUpBy", "FollowUpDate", "FollowUpTime", "FollowUpMessage", "Department"]
                }).dxDataGrid("instance");

                $("#autoExpand").dxCheckBox({
                    value: true,
                    text: "Expand All Groups",
                    onValueChanged: function(data) {
                        dataGrid.option("grouping.autoExpandAll", data.value);
                    }
                });
            });
    }

    function showFolloup(id) {
        $("#bs-example-modal-lg").modal("show");
        $("#cid").val(id);
    }


    function ShowRecurringDetails(Candidate) {
        $('#spnCandidateName').text(Candidate.CandidateName);
        CandidateId = Candidate.CandidateId ? Candidate.CandidateId : CandidateId;
        param = { CandidateId };

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("ShowRecurringDetails")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (data) {
                debugger;
                data = JSON.parse(data);
                recurringdata = data.Table;
                enrollmentDetails = data.Table1[0];
                paymentDetails = data.Table2[0];
                grandPaidTotal = reccuringTotal + (enrollmentDetails ? enrollmentDetails.RecurringPaidAmount :0);
                let showEditOptions = true;
                PaymentStatusArr = recurringdata.map(x => x.PaymentStatus);
                if (data.Table2.length > 0) {
                    remainingTotal = paymentDetails.UnPaidAmount ? paymentDetails.UnPaidAmount : 0;
                    showEditOptions = remainingTotal === 0 ? false : true;
                } else {
                    remainingTotal = 0;
                    showEditOptions = true;
                }

                $("#gridContainer").dxDataGrid({
                    dataSource: recurringdata,
                    columns: [
                        { dataField: 'DueDate', caption: 'Due Date', alignment: 'center', dataType: 'date', format: 'dd MMM yyyy', validationRules: [{ type: "required" }] },
                        { dataField: 'Amount', caption: 'Amount', alignment: 'center', dataType: 'number', validationRules: [{ type: "required" }] },
                        {
                            dataField: 'PaymentStatus',
                            caption: 'Payment Status',
                            alignment: 'center',
                            dataType: 'string',
                            lookup: { dataSource: ['UnPaid', 'Paid', 'Refund', 'Deleted', 'Discount', 'Rejected', 'Un-Paid'] },
                            validationRules: [{ type: "required" }]
                        },
                        {
                            dataField: 'ReceivedIn',
                            caption: 'Received In',
                            alignment: 'center',
                            dataType: 'string',
                            lookup: { dataSource: ['N/A', "PayPal", "Stripe", "US Bank", "Cheque", "India Bank", "Cash"] },
                            validationRules: [{ type: "required" }]
                        },
                        {
                            dataField: 'SendRemainderEmail',
                            caption: 'Send Remainder Email',
                            alignment: 'center',
                            dataType: 'string',
                            lookup: {
                                dataSource: ['Yes', 'No']
                            },
                            validationRules: [{ type: "required" }]
                        }, { dataField: 'Remarks', caption: 'Remarks', alignment: 'center', dataType: 'string', width: '200px', validationRules: [{ type: "required" }] }
                    ],
                    summary: {
                        totalItems: [
                            { column: "Amount", valueFormat: "currency", summaryType: "sum" }
                        ]
                    },
                    showBorders: true,
                    editing: {
                        mode: "row",
                        allowUpdating: showEditOptions,
                        allowAdding: showEditOptions
                    },
                    onInitNewRow: function(e) {
                        e.data.SendRemainderEmail = 'Yes';
                        e.data.PaymentStatus = 'UnPaid';
                        e.data.ReceivedIn = 'N/A';
                    },
                    onRowInserted: function(e) {
                        delete e.data.__KEY__;
                        e.data.CandidateId = CandidateId;
                        e.data.remainingTotal = remainingTotal;
                        param = e.data;
                        if (e.data.Amount > remainingTotal) {
                            DevExpress.ui.notify("More than Remaining Amount Not Allow ..!!", "error", 5000);
                            ShowRecurringDetails(CandidateId);
                        } else {
                            let Message = "Payment Add Amount .? Amount : " + param.Amount;
                            var result = DevExpress.ui.dialog.confirm("<i>" + Message +"</i>", "Are you sure? ");
                            result.done(function (res) {
                                if (res) {
                                    $.ajax({
                                        type: "POST",
                                        contentType: "application/json; charset=utf-8",
                                        url: "@Url.Action("RecurringMasterTemp_Insert")",
                                        data: "{parameter:'" + JSON.stringify(param) + "'}",
                                        success: function(data) {
                                            if (data === "True") {
                                                DevExpress.ui.notify("Record Inserted Successfully Successfully ..!!", "success", 5000);
                                                ShowRecurringDetails(CandidateId);
                                            }
                                        }
                                    });
                                }
                                ShowRecurringDetails(CandidateId);
                            });
                        }
                    },
                    onRowUpdated: function (e) {
                        param = e.data;
                        if (e.data.Amount > remainingTotal) {
                            DevExpress.ui.notify("More than Remaining Amount Not Allow ..!!", "error", 5000);
                            ShowRecurringDetails(CandidateId);
                        } else {
                            let Message = "Payment Change Amount .? Amount : " + param.Amount;
                            var result = DevExpress.ui.dialog.confirm("<i>" + Message + "</i>", "Are you sure? ");
                            result.done(function (res) {
                                if (res) {
                                    $.ajax({
                                        type: "POST",
                                        contentType: "application/json; charset=utf-8",
                                        url: "@Url.Action("RecurringMasterTemp_Update")",
                                        data: "{parameter:'" + JSON.stringify(param) + "'}",
                                        success: function (data) {
                                            if (data === "True") {
                                                DevExpress.ui.notify("Record Updated Successfully Successfully ..!!", "success", 5000);
                                                ShowRecurringDetails(CandidateId);

                                            }
                                        }
                                    });
                                }
                                ShowRecurringDetails(CandidateId);
                            });
                        }
                    }

                });
                $('#lblPaidDate').text(enrollmentDetails ? enrollmentDetails.PaidDate:'');
                $('#lblRecurringAmt').text(enrollmentDetails ? enrollmentDetails.RecurringPaidAmount:0);
                $('#lblReceivedIn').text(enrollmentDetails ? enrollmentDetails.ReceivedIn : '');
                $('#lblPaymentStatus').text(enrollmentDetails ? enrollmentDetails.PaymentStatus:'');
                $('#lblTotalAmt').text(enrollmentDetails ? enrollmentDetails.TotalAmount : 0);
                if (data.Table2.length > 0) {
                    $('#lblUnPaidAmount').text(paymentDetails.UnPaidAmount ? paymentDetails.UnPaidAmount+' $' : 0+'$');
                    $('#lblPaidAmount').text(paymentDetails.PaidAmount ? paymentDetails.PaidAmount+' $' : 0+'$');
                } else {
                    $('#lblUnPaidAmount').text('');
                    $('#lblPaidAmount').text('');
                }

                let res = PaymentStatusArr.find(ele => ele === 'UnPaid');
                if (res) {
                    $('#lblStatus').text('Partialy Paid');
                } else
                    $('#lblStatus').text(remainingTotal === 0 ? 'Fully Paid' : 'Partialy Paid');

                $('#modalShowRecurringDetails').modal({ backdrop: 'static', keyboard: false });
            }
        });
    }


</script>
