
@{ ViewBag.Title = "Candidate List";
    Layout = "~/Views/Shared/_Layout.cshtml"; }




<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }
</style>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseCandidateList" role="button" aria-expanded="true" aria-controls="collapseCandidateList"> <i class="fa fa-filter"></i> Candidate List<i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseCandidateList" class="collapse show">
                    <div class="row">
                        <div class="col-xl-12 border-right">
                            <h4 class="mt-0 header-title mb-4">Candidate List</h4>
                            <div class="rowCount" id="rowCount"></div>
                            <div id="gridCandidateList"></div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-default-comment" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Add Follow up Details</h4>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("ChangeStatus","ManageCandidate",new { @area = "SalesAssociate"})" method="get">
                    <input type="hidden" name="cid" id="cid" />
                    <table class="table table-responsive">
                        <tr>
                            <td>Status</td>
                            <td>
                                @{ string[] status = { "Sales: Not Paying Recurring", "Sales: Problem with Technical Expert", "Sales: Problem with Resume Team", "Sales: Problem with Sales Assocaite", "Sales: Want to Dropped", "Sales: Asked for Refund", "Sales: Candidate Not Responding", "Sales: Dropped", "Sales: Delete Entry", "Sales: Marketing On Hold", "Account: Payment Done", "Account: Dispute", "Onboarding: Candidate Not Responding" }; }
                                <select class="form-control" id="status" name="status">
                                    @foreach (string st in status)
                                    {
                        <option value="@st">@st</option>
}
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>Message</td>
                            <td>
                                <textarea class="form-control" id="message" name="message"></textarea>
                            </td>
                        </tr>
                        <tr>
                            <td class="" colspan="2" align="right">
                                <button class="btn btn-primary">Save</button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


<script>
    $(function () {

         //start getting data from GetCandidateList
        $.getJSON("@Url.Action("GetIndexJson", "ManageCandidate", new { @area = "SalesAssociate" })", null, function (data) {
            //alert(data);
            var dataGrid = $("#gridCandidateList").dxDataGrid({
            dataSource: data,
                columns: [
                    { dataField:'Delete',caption:'Delete',alignment:'center',width: 80,type:'buttons',
                        cellTemplate: function (container, options) {
                            $("<div>")
                                .append($("<a href='@Url.Action("DeleteCandidate", "ManageCandidate", new { @area = "SalesAssociate" })/?cid=" + options.data.CandidateId + "'><i class='fa fa-trash'></i></a>"))

                                .appendTo(container);
                        }
                    },
                    { dataField: 'Download', caption: 'Download', alignment: 'center', width: 80, type: 'buttons',
                        cellTemplate: function (container, options) {
                            $("<div>")
                                .append($("<a href='" + options.data.AgreementLink + "'><i class='fa fa-download'></i></a>"))

                                .appendTo(container);
                        }
                    },
                    { dataField: 'FollowUp', caption: 'Follow Up', alignment: 'center', width: 120, type: 'buttons',
                        cellTemplate: function (container, options) {
                            $("<div>").text('').on('dxclick', function () {
                                followUp(options.data.CandidateId);
                            }).append($("<button>", { "class": "btn btn-primary btn-sm" }).append($("<b>", { "text": "+ Follow Up" }))).appendTo(container);
                    }
                    @*cellTemplate: function (container, options) {
                        $("<div>").append("<a href = '@Url.Action("UpdateCandidate","ManagerCandidate",new { @area = "SalesAssociate" })/" + options.data.CandidateId + "'>Edit</a>").appendTo(container);
                            @*.append($("<a>", { "href": "@Url.Action("UpdateCandidate","ManagerCandidate",new { @area = "SalesAssociate" })/" + options.data.CandidateId, "class": "btn btn-info" , "text" : "Edit" })).appendTo(container);
                    }*@

                },{ dataField: "Edit", caption: "Edit", width: 80,type:'buttons', alignment:'center',
                    cellTemplate: function (container, options) {
                        $("<div>").append("<a href = '@Url.Action("UpdateCandidate","ManageCandidate",new { @area = "SalesAssociate" })/" + options.data.CandidateId + "'>Edit</a>").appendTo(container);
                            @*.append($("<a>", { "href": "@Url.Action("UpdateCandidate","ManagerCandidate",new { @area = "SalesAssociate" })/" + options.data.CandidateId, "class": "btn btn-info" , "text" : "Edit" })).appendTo(container);*@
                    }

                    },
                    { dataField: "CandidateName", caption: "Candidate Name",alignment:'center', width: 140 ,dataType:'string'},

                    { dataField: "AgreementSent", caption: "Agreement Sent?", alignment: "center", width: 120, type: "buttons",
                        cellTemplate: function (container, options) {
                            $("<div>").append($("<img>", { "src": options.value === "N/A" ? "/Content/icons/uncheck32px.png" :
                                (options.value === "true" ? "/Content/icons/check32px.png" : "/Content/icons/uncheck32px.png"), width: "15px"
                            })).appendTo(container);
                        }

                    },
                    { dataField: "AgreementPercentage", caption: "Agreement Per(%)", alignment: "center",  width: 140 ,dataType:'string'},
                    { dataField: "EnrolledDate", caption:'EnrolledDate', alignment: "center", dataType: "date", sortIndex: 0, sortOrder: "desc", width: 120,format:'dd MMM yyyy' },
                    { dataField: "EmailId", caption:'Email Id', alignment: "center", width: 180,dataType:'string' },
                    { dataField: "TotalAmount", caption: 'Total Amount', alignment: "right", width: 120, dataType: 'fixedPoint',
                        format: { type: 'fixedPoint', precision: 2 }
                    },

                    { dataField: "PaidAmount", caption: 'Paid Amount', alignment: "right", width: 120, dataType: 'fixedPoint',
                        format: { type: 'fixedPoint',precision: 2 }
                    }
                    ,
                    { dataField: "ServiceName", caption: "Service Name", width: 120, alignment: "center",dataType:'string',
                        cellTemplate: function (container, options) {
                            var str = "";
                            if (options.value === "AOG (Art Of Getting Job)")
                                str = "AOG M";
                            else if (options.value === "AOG (Art Of Getting Job) Training + Marketing")
                                str = "AOG TM";
                            else if (options.value === "Training")
                                str = "AOG T";
                            $("<div>").append($("<b>" + str + "</b>")).appendTo(container);
                        }
                    }],
            summary: {
                totalItems: [
                    { column: "TotalAmount", valueFormat: "currency", summaryType: "sum" },
                    { column: "PaidAmount", valueFormat: "currency", summaryType: "sum" }]
            },
            columnsAutoWidth: true,
            wordWrapEnabled: true,
            rowAlternationEnabled: true,
            showBorders: true,
            grouping: { autoExpandAll: true },
            paging: { pageSize: 10 },
            pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
            headerFilter: { visible: true },
            filterRow: { visible: true, applyFilter: "auto" },
            allowColumnResizing: true,
            groupPanel: { visible: true },
            searchPanel: { visible: true, width: 240, placeholder: "Search..." },
            export: {
                enabled: true,
                fileName: "Manage Candidate",
                allowExportSelectedData: true,
                customizeExcelCell: options => {
                    if (options.gridCell.rowType === "header") {
                        options.backgroundColor = _dxGridHeaderBGColor;
                        options.font.color = _dxGridHeaderColor;
                    }
                }
            },
            selection: { mode: "multiple" },
            allowColumnReordering: true,
            columnFixing: { enabled: false },
            columnChooser: {
                enabled: true,
                mode: "select",
                allowSearch: true
            },
            onExporting: function(e) {
                e.component.beginUpdate();
                e.component.columnOption("Delete", "visible", false);
                e.component.columnOption("Download", "visible", false);
                e.component.columnOption("FollowUp", "visible", false);
                e.component.columnOption("Edit", "visible", false);
                e.component.columnOption("AgreementSent", "visible", false);
            },
            onExported: function(e) {
                e.component.columnOption("Delete", "visible", true);
                e.component.columnOption("Download", "visible", true);
                e.component.columnOption("FollowUp", "visible", true);
                e.component.columnOption("Edit", "visible", true);
                e.component.columnOption("AgreementSent", "visible", true);
                e.component.endUpdate();
            },
            onCellPrepared: function(e) {
                if (e.rowType === "header") {
                    e.cellElement.css("text-align", "center");
                    e.cellElement.css("font-weight", "bold");
                }
                if (e.rowType === "group") {
                    e.cellElement.css("text-align", "center");
                }
            },
            onContentReady(e) {
                jQuery('#rowCount').html('Total Records : ' + jQuery("#gridCandidateList").dxDataGrid('instance').totalCount());
            }
        }).dxDataGrid('instance');

        var applyFilterTypes = [{
            key: "auto",
            name: "Immediately"
        }, {
            key: "onClick",
            name: "On Button Click"
        }];

        var applyFilterModeEditor = $("#useFilterApplyButton").dxSelectBox({
            items: applyFilterTypes,
            value: applyFilterTypes[0].key,
            valueExpr: "key",
            displayExpr: "name",
            onValueChanged: function (data) {
                dataGrid.option("filterRow.applyFilter", data.value);
            }
        }).dxSelectBox("instance");

        $("#filterRow").dxCheckBox({
            text: "Filter Row",
            value: true,
            onValueChanged: function (data) {
                dataGrid.clearFilter();
                dataGrid.option("filterRow.visible", data.value);
                applyFilterModeEditor.option("disabled", !data.value);
            }
        });

        $("#headerFilter").dxCheckBox({
            text: "Header Filter",
            value: true,
            onValueChanged: function (data) {
                dataGrid.clearFilter();
                dataGrid.option("headerFilter.visible", data.value);
            }
        });

        function getOrderDay(rowData) {
            return (new Date(rowData.OrderDate)).getDay();
            }

        });
        //end getting data from GetCandidateTimeLine

    });

    function followUp(id) {

        $("#modal-default-comment").modal();
        $("#cid").val(id);


    }
</script>
