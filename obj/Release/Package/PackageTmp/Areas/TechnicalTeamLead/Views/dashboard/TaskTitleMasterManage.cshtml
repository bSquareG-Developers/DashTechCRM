
@{ ViewBag.Title = "TaskTitleMasterManage";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<style>
    .themeColor {
        color: #F16C69;
        font-size: 20px;
        cursor: pointer;
    }

    .parsley-error, .parsley-required {
        color: #F16C69;
    }

    .rowCount {
        color: #F16C69;
        font-size: large;
    }
</style>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseTitle"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseTitle">
                    <i class="fa fa-tasks"></i> Task Title Manage
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseTitle" class="collapse show">
                    <div class="row">
                        <div class="col-md-4">
                            <button class="btn btn-primary" id="btnAddTask"><i class="fa fa-plus"></i>&nbsp;&nbsp;Add Task Title</button>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-xl-12">
                            <div class='rowCount' id="rowCount"></div>
                            <div id="gridContainer"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modalManageTaskDetails" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Manage Task Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Task Title</label>
                            <input type="text" id="txtTaskTitle" class="form-control" maxlength="100" />
                            <span id="reqTaskTitle" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-check">
                            <label class="d-block">&nbsp;</label>
                            <input class="form-check-input" type="checkbox" value="" id="chkisActive">
                            <label class="form-check-label" for="chkisActive">
                                isActive
                            </label>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="d-block">&nbsp;</label>
                            <button class="btn btn-primary btn-block" id="btnSave">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="loadpanel"></div>
<script>
    var flag = 'INS';
    var TaskTitleId = '';
    var columnsList = [
        {
            dataField: 'Edit', caption: 'Edit', alignment: 'center', dataType: 'string', width: 120, format: '',type:'buttons',
            cellTemplate: function(container, options) {
                $('<i class="fa fa-edit" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                    function () {
                        flag = 'UPD';
                        EditDate(options.data);
                    }).appendTo(container);
            }
        },
        {
            dataField: 'Delete', caption: 'Delete', alignment: 'center', dataType: 'string', width: 120, format: '', type: 'buttons',
            cellTemplate: function(container, options) {
                $('<i class="fa fa-trash" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                    function() {
                        DeleteData(options.data);
                    }).appendTo(container);
            }
        },
        { dataField: 'TaskName', caption: 'Task Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
        { dataField: 'CreatedBy', caption: 'Created By', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'CDATE', caption: 'Created Date', alignment: 'center', dataType: 'date', width: 180, format: 'dd MMM yyyy' },
        { dataField: 'IsActive', caption: 'Is Active .?', alignment: 'center', dataType: 'string', width: 120, format: '' }
    ];
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");

    $(function() {
        TaskTitle();
    });
    $('#btnAddTask').click(function (e) {
        $('#modalManageTaskDetails').modal('show');
        $("#chkisActive").prop('checked', false);
        $('#txtTaskTitle').val('');
        flag = 'INS';
    });
    $('#btnSave').click(function (e) {
        var TaskName = $('#txtTaskTitle').val();
        var IsActive = '';
        if ($('#chkisActive').is(":checked"))
            IsActive = 1;
        else
            IsActive = 0;

        if (!TaskName) {
            $('#txtTaskTitle').addClass('parsley-error');
            $('#reqTaskTitle').text(`Task Title can't be blank`);
            $('#reqTaskTitle').show();
            return false;
        } else {
            $('#reqTaskTitle').hide();
            $('#txtTaskTitle').removeClass('parsley-error');
        }
        param = { TaskName, IsActive, flag, TaskTitleId };
        saveUpdateTaskTitle(param);
    });

    function TaskTitle() {
        loadPanel.show();
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetTaskTitleMaster")",
            success: function (response) {
                loadPanel.hide();
                response = JSON.parse(response);
                $('#gridContainer').dxDataGrid({
                    dataSource: response,
                    columns: columnsList,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Task Title List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function (e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Edit", "visible", false);
                        e.component.columnOption("Delete", "visible", false);
                    },
                    onExported: function (e) {
                        e.component.columnOption("Edit", "visible", true);
                        e.component.columnOption("Delete", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function (e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount').html('Total Records : ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
                    }
                });
            }
        });
    }
    function saveUpdateTaskTitle(data) {
        loadPanel.show();
        param = data;
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            //url: "/dashboard/InsertUpdateTaskTitle",
            url: "@Url.Action("InsertUpdateTaskTitle")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (response) {
                loadPanel.hide();
                if (response === '0') {
                    DevExpress.ui.notify("Record Inserted Successfully","success",5000);
                }
                else if (response === '1') {
                    DevExpress.ui.notify("Record Updated Successfully", "success", 5000);
                }
                else {
                    DevExpress.ui.notify("Record Already Exists", "warning", 5000);
                }
                location.reload();
            }
        });
    }

    function EditDate(data) {
        $('#txtTaskTitle').val(data.TaskName);
        TaskTitleId = data.ID;
        if (data.ActiveStatus)
            $("#chkisActive").prop('checked', true);
        else
            $("#chkisActive").prop('checked', false);
        $('#modalManageTaskDetails').modal('show');
    }

    function DeleteData(data) {

        param = { Id: data.ID };
        var result = DevExpress.ui.dialog.confirm("<i> You want to delete this Task Title .?</i>", "Are you sure?");
        result.done(function (res) {
            if (res) {
                loadPanel.show();

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Action("DeleteTaskTitle")",
                    data: "{parameter:'" + JSON.stringify(param) + "'}",
                    success: function (response) {
                        loadPanel.hide();
                        if (response === 'True')
                            DevExpress.ui.notify("Record Deleted Successfully","success",5000);
                        location.reload();
                    }
                });
            }
        });
    }
</script>
