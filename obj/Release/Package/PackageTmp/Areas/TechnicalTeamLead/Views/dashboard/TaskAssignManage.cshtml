
@{ ViewBag.Title = "TaskAssignManage";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }

    .parsley-error, .parsley-required {
        color: #F16C69;
    }
</style>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseTaskManage"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseTaskManage">
                    <i class="fa fa-filter"></i> Task Manage
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseTaskManage" class="collapse show">
                    <div class="row">
                        <div class="col-md-4">
                            <button class="btn btn-primary" id="btnAddTask"><i class="fa fa-plus"></i>&nbsp;&nbsp;Add Task</button>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-xl-12">
                            <div class='rowCount' id="rowCount"></div>
                            <div id="gridContainer"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modalTaskManage" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Task Manage</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Task Title :</label>
                            <select id="ddlTaskTitle" class="form-control select2"></select>
                            <span id="reqTaskTitle" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>


                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Assign To :</label>
                            <select id="ddlAssignTo" class="form-control select2"></select>
                            <span id="reqAssignTo" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Task End Date :</label>
                            <div id="txtEndDate"></div>
                            <span id="reqEndDate" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Task End Time :</label>
                            @*<input type="text" id="txtAssignTime" class="form-control" />*@
                            <div id="txtEndTime"></div>
                            <span id="reqAssignTime" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Status :</label>
                            <select id="ddlStatus" class="form-control select2"></select>
                            <span id="reqStatus" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Task Details :</label>
                            <textarea rows="5" cols="25" class="form-control" id="txtTaskDetails"></textarea>
                            <span id="reqTaskDetails" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Task FeedBack :</label>
                            <textarea rows="5" cols="25" class="form-control" id="txtTaskFeedBack"></textarea>
                            <span id="reqTaskFeedBack" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="d-block">&nbsp;</label>
                            <button class="btn btn-primary btn-block" id="btnSave">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="loadpanel"></div>
<script>
    var flag = 'INS';
    var TaskId = '';
    var now = new Date();
    $('.select2').select2();
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");

    var columnsList = [
        {
            dataField: 'Edit', caption: 'Edit', alignment: 'center', dataType: 'string', width: 80, format: '', type: 'buttons', fixed: true, fixedPosition: "left", cellTemplate: function(container, options) {
          $('<i class="fa fa-edit" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
              function () {
                  flag = 'UPD';
                  EditData(options.data);
              }).appendTo(container);
      } },
        {
            dataField: 'Delete', caption: 'Delete', alignment: 'center', dataType: 'string', width: 80, format: '', type: 'buttons', fixed: true, fixedPosition: "left",  cellTemplate: function(container, options) {
            $('<i class="fa fa-trash" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                function () {
                    DeleteData(options.data);
                }).appendTo(container);
        } },
        { dataField: 'TaskName', caption: 'Task Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
        { dataField: 'TaskDetails', caption: 'Task Details', alignment: 'center', dataType: 'string', width: 200, format: '' },
        { dataField: 'AssignedByName', caption: 'Assigned By', alignment: 'center', dataType: 'string', width: 140, format: '' },
        { dataField: 'AssignedToName', caption: 'Assigned To', alignment: 'center', dataType: 'string', width: 140, format: '' },
        { dataField: 'AssignDate', caption: 'Assign Date', alignment: 'center', dataType: 'date', width: 140, format: 'dd MMM yyyy' },
        { dataField: 'AssignTime', caption: 'Assign Time', alignment: 'center', dataType: 'string', width: 140, format: '' },
        { dataField: 'StartDate', caption: 'Start Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
        { dataField: 'EndDate', caption: 'End Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
        { dataField: 'StartTime', caption: 'Start Time', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'EndTime', caption: 'End Time', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'Status', caption: 'Status', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'FeedBack', caption: 'FeedBack', alignment: 'center', dataType: 'string', width: 150, format: '' }
    ];

    $(function () {
        TaskMasterGet();
        TaskTitleGet();
        GetUsersByRole();

        GetStatus();
        jQuery('#txtEndDate').dxDateBox({value : now});
        jQuery('#txtEndTime').dxDateBox({ type: 'time', value: now, pickerType: "rollers"});
    });


    function TaskMasterGet() {
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("TaskMasterGet")",
            success: function (response) {
                loadPanel.hide();
                response = JSON.parse(response);
                $('#gridContainer').dxDataGrid({
                    dataSource: response,
                    columns: columnsList,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Assigned Tasks",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount').html('Total Records : ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
                    }
                });
            }
        });
    }
    $('#btnAddTask').click(function (e) {
        $('#modalTaskManage').modal({ backdrop: 'static', keyboard: false });
        reset();

    });

    function reset() {
        flag = 'INS';
        $('#reqTaskTitle').html('');
        $('#reqAssignTo').html('');
        $('#reqEndTime').html('');
        $('#reqEndDate').html('');
        $('#reqStatus').html('');
        $('#txtTaskDetails').val('');
        $('#reqTaskFeedBack').val('');
        TaskTitleGet();
        GetUsersByRole();
        GetStatus();
        jQuery('#txtEndDate').dxDateBox({value : now});
        jQuery('#txtEndTime').dxDateBox({ type: 'time', value: now, pickerType: "rollers"});
    }
    function TaskTitleGet() {
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("TaskTitleGet")",
            success: function (response) {
                loadPanel.hide();
                response = JSON.parse(response);
                jQuery('#ddlTaskTitle').empty();
                jQuery('#ddlTaskTitle').append('<option value="">Select</option>');
                jQuery.each(response,
                    function(i, v) {
                        jQuery('#ddlTaskTitle').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }

    function GetUsersByRole() {
        param = { userRole: 8 }

        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetUsersByRole")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (data) {
                loadPanel.hide();
                data = JSON.parse(data);
                jQuery('#ddlAssignTo').empty();
                jQuery('#ddlAssignTo').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#ddlAssignTo').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }


    function GetStatus() {
        var statusList = [
            { ID: 'In Progress', TEXT: 'In Progress' },
            { ID: 'Cancelled', TEXT: 'Cancelled' },
            { ID: 'Completed', TEXT: 'Completed' }
        ];
        jQuery('#ddlStatus').empty();
        jQuery('#ddlStatus').append('<option value="">Select</option>');
        jQuery.each(statusList,
            function(i, v) {
                jQuery('#ddlStatus').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
            });
    }

    $('#btnSave').click(function(e) {
        var taskTitle = $('#ddlTaskTitle').val() ? $('#ddlTaskTitle').val() : '';
        var assignTo = $('#ddlAssignTo').val() ? $('#ddlAssignTo').val() : '';
        var endDate = $("#txtEndDate").dxDateBox("instance").option('value');
        var endTime = $("#txtEndTime").dxDateBox("instance").option('value');
        var status = $('#ddlStatus').val() ? $('#ddlStatus').val() : '';
        var taskDetails = $('#txtTaskDetails').val() ? $('#txtTaskDetails').val() : '';
        var feedback = $('#txtTaskFeedBack').val() ? $('#txtTaskFeedBack').val() : '';

        if (!taskTitle) {
            $('#ddlTaskTitle').addClass('parsley-error');
            $('#reqTaskTitle').html('Please select Task Title');
            $('#reqTaskTitle').show();
            return false;
        } else {
            $('#ddlTaskTitle').removeClass('parsley-error');
            $('#reqTaskTitle').html('');
            $('#reqTaskTitle').hide();
        }
        if (!assignTo) {
            $('#ddlAssignTo').addClass('parsley-error');
            $('#reqAssignTo').html('Please select Task Assign To');
            $('#reqAssignTo').show();
            return false;
        } else {
            $('#ddlAssignTo').removeClass('parsley-error');
            $('#reqAssignTo').html('');
            $('#reqAssignTo').hide();
        } if (!endTime) {
            $('#txtEndTime').addClass('parsley-error');
            $('#reqEndTime').html('Please select Task End time (on an Average)');
            $('#reqEndTime').show();
            return false;
        } else {
            $('#txtEndTime').removeClass('parsley-error');
            $('#reqEndTime').html('');
            $('#reqEndTime').hide();
        }
        if (!endDate) {
            $('#txtEndDate').addClass('parsley-error');
            $('#reqEndDate').html('Please select Task End Date (on an Average)');
            $('#reqEndDate').show();
            return false;
        } else {
            $('#txtEndDate').removeClass('parsley-error');
            $('#reqEndDate').html('');
            $('#reqEndDate').hide();
        }
        if (!status) {
            $('#ddlStatus').addClass('parsley-error');
            $('#reqStatus').html('Please select status');
            $('#reqStatus').show();
            return false;
        } else {
            $('#ddlStatus').removeClass('parsley-error');
            $('#reqEndDate').html('');
            $('#reqStatus').hide();
        }

        var data = { TaskId, taskTitle, assignTo, endDate, endTime, status, taskDetails, flag, feedback }
        saveUpdateDetails(data);
    });

    function saveUpdateDetails(data) {
        param = data;
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("AssignTaskToExperts")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (response) {
                loadPanel.hide();
                if (response === '0')
                    DevExpress.ui.notify("Record Inserted Successfully", "success", 5000);
                else if (response === '1')
                    DevExpress.ui.notify("Record Updated Successfully", "success", 5000);
                else
                    DevExpress.ui.notify("Record Already Exists", "warning", 5000);
                location.reload();
            }
        });
    }

    function DeleteData(data) {
        param = { id: data.ID }
        var result = DevExpress.ui.dialog.confirm("<i> You want to delete this Assigned Task .?</i>", "Are you sure? ");
        result.done(function(res) {
            if (res) {
                loadPanel.show();
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Action("DeleteTask")",
                    data: "{parameter:'" + JSON.stringify(param) + "'}",
                    success: function (response) {
                        loadPanel.hide();
                        if (response === 'True')
                            DevExpress.ui.notify("Record Deleted Successfully","success",5000);
                        location.reload();
                    }
                });
            }
        });
    }
    function EditData(data) {
        TaskId = data.ID;
        $('#txtTaskDetails').val(data.TaskDetails);
        $('#txtTaskFeedBack').val(data.FeedBack);
        $('#ddlTaskTitle').val(data.TaskTitleId);
        $('#ddlAssignTo').val(data.AssignTo);
        $('#ddlStatus').val(data.Status);
        jQuery('#txtEndDate').dxDateBox({ value: data.EndDate});
        jQuery('#txtEndTime').dxDateBox({ type: 'time', value: data.defaultEndTime, pickerType: "rollers"});
        $('#modalTaskManage').modal({ backdrop: 'static', keyboard: false });
    }
</script>
