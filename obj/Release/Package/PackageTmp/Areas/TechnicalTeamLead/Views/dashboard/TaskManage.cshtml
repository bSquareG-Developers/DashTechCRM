
@{ ViewBag.Title = "TaskManage";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }

    .parsley-error, .parsley-required {
        color: #F16C69;
    }
</style>


<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#TaskView"
                     role="button"
                     aria-expanded="true"
                     aria-controls="TaskView">
                    <i class="fa fa-filter"></i> View Tasks
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="TaskView" class="collapse show">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class='rowCount' id="rowCount"></div>
                            <div id="gridContainer"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseCandidateTechnicalExpertDetails"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseCandidateTechnicalExpertDetails">
                    <i class="fa fa-filter"></i> Candidate Technical Expert Details
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseCandidateTechnicalExpertDetails" class="collapse show">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <button id="btnAddCandidateTechExpert" class="btn btn-primary">Assign Candidate Technical Expert</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-12">
                            <div class='rowCount' id="rowCount1"></div>
                            <div id="gridContainerCandidateTechincalExpertDetails"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;"
                     data-toggle="collapse"
                     href="#collapseTaskManageMaster"
                     role="button"
                     aria-expanded="true"
                     aria-controls="collapseTaskManageMaster">
                    <i class="fa fa-filter"></i> Task Manage Master
                    <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i>
                </div>
                <hr />
                <div id="collapseTaskManageMaster" class="collapse show">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <button id="btnAddTaskManageMaster" class="btn btn-primary">Add Task Manage</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-12">
                            <div class='rowCount' id="rowCount2"></div>
                            <div id="gridTaskManageMaster"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modalTaskMange" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Assign Candidate</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Candidate :</label>
                            <select id="ddlCandidate" class="form-control select2"></select>
                            <span id="reqCandidate" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Assign to Expert :</label>
                            <select id="ddlExpert" class="form-control select2"></select>
                            <span id="reqExpert" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label id="lblRemarks">Assigned Remarks :</label>
                            <textarea id="txtRemarks" class="form-control"></textarea>
                            <span id="reqRemarks" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <button id="btnSubmit" class="btn btn-primary btn-block">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modalReviewRemarks" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">View Remarks</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div id="divViewRemarks"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modalTaskManageMaster" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Task Manage</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Task Category</label>
                            <select id="ddlTaskCategory" class="form-control"></select>
                            <span id="reqTaskCategory" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-6"></div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Start Time :</label>
                            <div id="txtstartTime"></div>
                            <span id="reqstartTime" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>End Time :</label>
                            <div id="txtendTime"></div>
                            <span id="reqendTime" class="parsley-required" style="display: none"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label>Remarks : </label>
                        <div class="form-group">
                            <textarea id="textRemarks" class="form-control"></textarea>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <button class="btn btn-primary" id="btnSaveProgressTask"> Save Progress Task</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="loadpanel"></div>
<script>
    var TaskManageMasterStatus = '';
    var refCTId = '';
    $(function () {
        gridBind();
        BindCandidate();
        GetUsersByRole();
        CandidateTechnicalExpertDetailsGet();
        TaskManageMasterGet();
        TaskCategoryMasterGet('ddlTaskCategory');
        jQuery('#txtstartTime').dxDateBox({ type: 'time', value: new Date(), pickerType: "rollers" });
        jQuery('#txtendTime').dxDateBox({ type: 'time', value: new Date(), pickerType: "rollers" });
    });
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");

    var ctId = "";
    var flag = '';
    $('.select2').select2();
    var columnsList = [


        { dataField: 'TaskName', caption: 'Task Name', alignment: 'center', dataType: 'string', width: 200, format: '' },
        { dataField: 'TaskDetails', caption: 'Task Details', alignment: 'center', dataType: 'string', width: 200, format: '' },
        { dataField: 'AssignedByName', caption: 'Assigned By', alignment: 'center', dataType: 'string', width: 140, format: '' },
        { dataField: 'AssignedToName', caption: 'Assigned To', alignment: 'center', dataType: 'string', width: 140, format: '' },
        { dataField: 'AssignDate', caption: 'Assign Date', alignment: 'center', dataType: 'date', width: 140, format: 'dd MMM yyyy' },
        { dataField: 'EndDate', caption: 'Dead Line', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
        { dataField: 'Status', caption: 'Status', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'FeedBack', caption: 'FeedBack', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'Remarks', caption: 'Remarks', alignment: 'center', dataType: 'string', width: 150, format: '' }
    ];
    var columnsCandidateTechnicalExpertDetails = [
        {
            dataField: 'ReAssignedCand', caption: 'Re Assign', alignment: 'center', dataType: 'string', width: 80, format: '', type: 'buttons', fixed: true, fixedPosition: "left",
            cellTemplate: function(container, options) {
                $('<i class="fa fa-edit" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                    function () {
                        flag = 'RES';
                        ReAssignCandidate(options.data);
                    }).appendTo(container);
            }
        },
        {
            dataField: 'AddInProgress', caption: 'Add In Progress Task .?', alignment: 'center', dataType: 'string', width: 130, format: '', type: 'buttons', fixed: true, fixedPosition: "left",
            cellTemplate: function(container, options) {
                $('<i class="fa fa-plus" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                    function () {
                        TaskManageMasterStatus = "In Progress";
                        refCTId = options.data.CTId;
                        TaskManageProgressChange(options.data);
                    }).appendTo(container);
            }
        },
        { dataField: 'CTAssignDate', caption: 'Assigned Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
        { dataField: 'ReAssigned', caption: 'ReAssigned .?', alignment: 'center', dataType: 'string', width: 140, format: '' },
        { dataField: 'CTAssingedRemarks', caption: 'Assigned Remarks', alignment: 'center', dataType: 'string', width: 190, format: '' },
        { dataField: 'CTReassignedRemarks', caption: 'Re-Assigned Remarks', alignment: 'center', dataType: 'string', width: 190, format: '' },
        { dataField: 'CandidateName', caption: 'Candidate Name', alignment: 'center', dataType: 'string', width: 180, format: '' },
        { dataField: 'AssignedExpertName', caption: 'Assigned Expert Name', alignment: 'center', dataType: 'string', width: 180, format: '' },
        { dataField: 'AssignedBy', caption: 'Assigned By', alignment: 'center', dataType: 'string', width: 180, format: '' }
    ];
    var columnsListTaskManageMaster = [
        {
            dataField: 'ViewTaskRemarks', caption: 'View Remarks', alignment: 'center', dataType: 'string', width: 100, format: '', type: 'buttons', fixed: true, fixedPosition: "left",
            cellTemplate: function (container, options) {
                $('<i class="fa fa-eye" aria-hidden="true" style="cursor: pointer; font-size: 10px;"></i>').text('').on('dxclick',
                    function () {
                        ReviewRemarks(options.data);
                    }).appendTo(container);
            }
        },

        {
            dataField: 'Completed', caption: 'Completed', alignment: 'center', dataType: 'string', width: 80, format: '', type: 'buttons', fixed: true, fixedPosition: "left",
            cellTemplate: function (container, options) {
                $('<i class="fa fa-check" aria-hidden="true" style="cursor: pointer; font-size: 10px;"></i>').text('').on('dxclick',
                    function () {
                        TaskManageMasterStatus = "Completed";
                        refCTId = options.data.RefCTId;
                        TaskManageProgressChange(options.data);
                    }).appendTo(container);
            }
        },
        {
            dataField: 'Cancelled', caption: 'Cancelled', alignment: 'center', dataType: 'string', width: 80, format: '', type: 'buttons', fixed: true, fixedPosition: "left",
            cellTemplate: function (container, options) {
                $('<i class="fa fa-times" aria-hidden="true" style="cursor: pointer; font-size: 10px;"></i>').text('').on('dxclick',
                    function () {
                        TaskManageMasterStatus = "Cancelled";
                        refCTId = options.data.RefCTId;
                        TaskManageProgressChange(options.data);
                    }).appendTo(container);
            }
        },
        { dataField: 'CandidateName', caption: 'Candidate Name', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'ExpertName', caption: 'Expert Name', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'TaskCatTitle', caption: 'Task Category Title', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'TaskDate', caption: 'Task Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
        { dataField: 'TaskStartTime', caption: 'Task Start Time', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'TaskEndTime', caption: 'Task End Time', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'TaskStatus', caption: 'Task Status', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'TotalMin', caption: 'Total Min', alignment: 'center', dataType: 'number', width: 120, format: '' },
        { dataField: 'TeamLeadFeedback', caption: 'Team Lead Feedback', alignment: 'center', dataType: 'string', width: 150, format: '' },
        { dataField: 'FeedbackDate', caption: 'Feedback Date', alignment: 'center', dataType: 'date', width: 150, format: 'dd MMM yyyy' },
        { dataField: 'FeedbackBy', caption: 'Feedback By', alignment: 'center', dataType: 'string', width: 150, format: '' },
    ];

    function GetUsersByRole() {
        param = { userRole: 8 }

        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetUsersByRole")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (data) {
                loadPanel.hide();
                data = JSON.parse(data);
                jQuery('#ddlExpert').empty();
                jQuery('#ddlExpert').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#ddlExpert').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }
    function BindCandidate() {
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("CandidateMasterBindCandidate")",
            success: function (data) {
                loadPanel.hide();
                data = JSON.parse(data);
                jQuery('#ddlCandidate').empty();
                jQuery('#ddlCandidate').append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery('#ddlCandidate').append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }
    function gridBind() {
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("TaskMasteGet")",
            success: function (response) {
                loadPanel.hide();
                response = JSON.parse(response);
                $('#gridContainer').dxDataGrid({
                    dataSource: response,
                    columns: columnsList,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    export: {
                        enabled: true,
                        fileName: "Task List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },

                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount').html('Total Records : ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
                    }
                });
            }
        });
    }
    function CandidateTechnicalExpertDetailsGet() {
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("CandidateTechnicalExpertDetailsGet")",
            success: function (response) {
                loadPanel.hide();
                response = JSON.parse(response);
                $('#gridContainerCandidateTechincalExpertDetails').dxDataGrid({
                    dataSource: response,
                    columns: columnsCandidateTechnicalExpertDetails,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    export: {
                        enabled: true,
                        fileName: "Candidate Technical Expert Details",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("ReAssignedCand", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("ReAssignedCand", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount1').html('Total Records : ' + jQuery("#gridContainerCandidateTechincalExpertDetails").dxDataGrid('instance').totalCount());
                    }
                });
            }
        });
    }

    $('#btnAddCandidateTechExpert').click(function (e) {
        $('#lblRemarks').html('Assigned Remaks :');
        flag = '';
        BindCandidate();
        CandidateTechnicalExpertDetailsGet();
        $('#txtRemarks').val('');
        $('#modalTaskMange').modal({ backdrop: 'static', keyboard: false });
    });

    function ReAssignCandidate(data) {
        $('#ddlCandidate').val(data.RefAssignedCandidateId);
        $('#ddlExpert').val(data.RefAssignedExpertId);
        $('#lblRemarks').html('Re Assigned Remaks :');
        ctId = data.CTId;
        $('#modalTaskMange').modal({ backdrop: 'static', keyboard: false });

    }
    $('#btnSubmit').click(function (e) {
        var candidateId = $('#ddlCandidate').val() ? $('#ddlCandidate').val() :'';
        var technicalExpert = $('#ddlExpert').val() ? $('#ddlExpert').val() : '';
        var reAssignRemarks='';
        var assignedRemarks = '';
        if (flag === 'RES') {
            reAssignRemarks= $('#txtRemarks').val() ? $('#txtRemarks').val() : '';
            assignedRemarks = '';
        } else {
            ctId = '';
            assignedRemarks = $('#txtRemarks').val() ? $('#txtRemarks').val():'';
            reAssignRemarks = '';
        }
        if (flag !== 'RES') {
            if (!candidateId) {
                $('#ddlCandidate').addClass('parsley-error');
                $('#reqCandidate').html('Please select candidate');
                $('#reqCandidate').show();
                return false;
            } else {
                $('#ddlCandidate').removeClass('parsley-error');
                $('#reqCandidate').html('');
                $('#reqCandidate').hide();
            }
            if (!technicalExpert) {

                $('#ddlExpert').addClass('parsley-error');
                $('#reqExpert').html('Please select Expert');
                $('#reqExpert').show();
                return false;
            } else {
                $('#ddlExpert').removeClass('parsley-error');
                $('#reqExpert').html('');
                $('#reqExpert').hide();

            }
        }

        param = { candidateId, technicalExpert, ctId, assignedRemarks, reAssignRemarks, flag };
        SaveCandidateTechnicalExpertDetails(param);
    });
    function SaveCandidateTechnicalExpertDetails(data) {
        loadPanel.show();
        param = data;
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("CandidateTechnicalExpertDetailsInsertUpdate")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (response) {
                loadPanel.hide();
                if (response === '0')
                    DevExpress.ui.notify("Task Assigned Successfully ..!!", "success", 5000);
                else if (response === '1')
                    DevExpress.ui.notify("Task Re-Assigned Successfully ..!!", "success", 5000);
                else
                    DevExpress.ui.notify("Record Already Exists", "warning", 5000);
                location.reload();
            }
        });
    }

    function TaskManageMasterGet() {
        loadPanel.show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("TaskManageMasterGet")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (response) {
                loadPanel.hide();
                response = JSON.parse(response);
                $('#gridTaskManageMaster').dxDataGrid({
                    dataSource: response,
                    columns: columnsListTaskManageMaster,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Task Manage Master",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("ViewTaskRemarks", "visible", false);
                        e.component.columnOption("Completed", "visible", false);
                        e.component.columnOption("Cancelled", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("ViewTaskRemarks", "visible", true);
                        e.component.columnOption("Completed", "visible", true);
                        e.component.columnOption("Cancelled", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount2').html('Total Records : ' + jQuery("#gridTaskManageMaster").dxDataGrid('instance').totalCount());
                    }
                });
            }
        });
    }
    function ReviewRemarks(data) {
        var remarks = data.TaskRemarks.replace('<p>', '');
        remarks = remarks.replace('</p>', '');
        $('#divViewRemarks').html(remarks);
        $('#modalReviewRemarks').modal({ backdrop: 'static', keyboard: false });
    }

    $('#btnAddTaskManageMaster').click(function (e) {
        $('#modalTaskManageMaster').modal({ backdrop: 'static', keyboard: false });
    });

    function TaskCategoryMasterGet(ddlId) {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("TaskCategoryMasterGet")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function(data) {
                data = JSON.parse(data);
                jQuery(`#${ddlId}`).empty();
                jQuery(`#${ddlId}`).append('<option value="">Select</option>');
                jQuery.each(data,
                    function(i, v) {
                        jQuery(`#${ddlId}`).append('<option value="' + v.ID + '">' + v.TEXT + '</option>');
                    });
            }
        });
    }

    function TaskManageProgressChange(data) {
        $('#ddlTaskCategory').val(data.RefTaskCatId);
        $('#modalTaskManageMaster').modal({ backdrop: 'static', keyboard: false });
    }

    $('#btnSaveProgressTask').click(function(e) {
        let startTime = $("#txtstartTime").dxDateBox("instance").option('value');
        let endTime = $("#txtendTime").dxDateBox("instance").option('value');

        let taskRunningMinutes = diff_hours(startTime, endTime);
        let taskCategory = $('#ddlTaskCategory').val();

        let taskRemarks = $('#textRemarks').val();
        let TMId = '';
        if (!startTime) {
            $('#txtstartTime').addClass('parsley-error');
            $('#reqstartTime').html('Please select start Date');
            $('#reqstartTime').show();
            return false;
        } else {
            $('#txtstartTime').removeClass('parsley-error');
            $('#reqstartTime').html('');
            $('#reqstartTime').hide();
        }
        if (!endTime) {
            $('#txtEndTime').addClass('parsley-error');
            $('#reqEndTime').html('Please select End Date');
            $('#reqEndTime').show();
            return false;
        } else {
            $('#txtEndTime').removeClass('parsley-error');
            $('#reqEndTime').html('');
            $('#reqEndTime').hide();
        }

        if (!taskCategory) {
            $('#ddlTaskCategorye').addClass('parsley-error');
            $('#reqTaskCategory').html('Please Select Task Category');
            $('#reqTaskCategory').show();
            return false;
        } else {
            $('#ddlTaskCategory').removeClass('parsley-error');
            $('#reqTaskCategory').html('');
            $('#reqTaskCategory').hide();
        }

        param = { TMId, startTime, endTime, TaskManageMasterStatus, refCTId, taskRunningMinutes, taskCategory, taskRemarks }
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("TaskManageMasterInsertUpdate")",
            data: "{parameter:'" + JSON.stringify(param) + "'}",
            success: function (response) {
                loadPanel.hide();
                if (response === '0')
                    DevExpress.ui.notify("Task Progress added successfully ..!!", "success", 5000);
                else
                    DevExpress.ui.notify("Something went wrong", "warning", 5000);
                location.reload();
            }
        });
    });
    function diff_hours(dt2, dt1)
    {
        var diff = (dt2.getTime() - dt1.getTime()) / 1000;
        diff /= 60;
        return Math.abs(Math.round(diff));
    }

</script>
