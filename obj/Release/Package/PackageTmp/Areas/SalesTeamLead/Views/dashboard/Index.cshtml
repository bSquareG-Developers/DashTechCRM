
@{ ViewBag.Title = "Sales Associate";
    Layout = "~/Views/Shared/_Layout.cshtml"; }


<style>
    .rowCount {
        color: #F16C69;
        font-size: large;
    }
</style>


<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseTodayCandidateList" role="button" aria-expanded="true" aria-controls="collapseTodayCandidateList"> <i class="fa fa-filter"></i> Today's Candidate TimeLine Report<i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseTodayCandidateList" class="collapse show">
                    <div class="row">
                        <div class="col-xl-12">
                            <h4 class="mt-0 header-title mb-4">Today's Candidate TimeLine Report</h4>
                            <div class='rowCount' id="rowCount"></div>
                            <div id="gridNewCandidateTimeLineReport"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div style="color: #f16c69; cursor: pointer;" data-toggle="collapse" href="#collapseCandidateList" role="button" aria-expanded="true" aria-controls="#collapseCandidateList"> <i class="fa fa-filter"></i> Candidate TimeLine Report   <i class="fa fa-plus float-right" style="color: #f16c69; cursor: pointer;"></i></div>
                <hr />
                <div id="collapseCandidateList" class="collapse">
                    <div class="row">
                        <div class="col-xl-12">
                            <h4 class="mt-0 header-title mb-4"></h4>
                            <div class='rowCount' id="rowCount1"></div>
                            <div id="gridCandidateTimeLineReport"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="loadpanel"></div>
<script>
    var loadPanel = $(".loadpanel").dxLoadPanel({
        shadingColor: "rgba(0,0,0,0.4)",
        visible: false,
        showIndicator: true,
        showPane: true,
        shading: true,
        closeOnOutsideClick: false
    }).dxLoadPanel("instance");

    let columnsList = [
        { dataField: "CandidateName", caption: "Name", width: 130, alignment: 'center', dataType: 'string' },
        { dataField: "ManagerName", caption: "Manager", width: 130, alignment: 'center', dataType: 'string' },
        { dataField: "TeamLeadName", caption: "TL", width: 100, alignment: 'center', dataType: 'string' },
        { dataField: "SalesAssociateName", caption: "Associate", width: 130, alignment: 'center', dataType: 'string' },
        {
            dataField: "CandidateStatus",
            caption: "Marketing",
            alignment: "center",
            type: "buttons",
            width: 100,
            cellTemplate: function(container, options) {
                $('<i></i>').append(options.data.CandidateStatus).appendTo(container);
            }
        },
        {
            dataField: "view",
            caption: "view",
            alignment: "center",
            type: "buttons",
            width: 70,
            cellTemplate: function(container, options) {
                $('<i class="fa fa-info-circle" aria-hidden="true" style="cursor: pointer; font-size: 15px;"></i>').text('').on('dxclick',
                    function() {
                        showData(options.data.CandidateId);
                    }).appendTo(container);
            }
        },
        {
            dataField: "AgreementSent",
            caption: "AGR?",
            alignment: "center",
            type: "buttons",
            width: 70,
            cellTemplate: function(container, options) {
                $("<div>").append($("<img>", { "src": options.value === "N/A" ? "/Content/icons/uncheck32px.png" : (options.value === "true" ? "/Content/icons/check32px.png" : "/Content/icons/uncheck32px.png"), width: "15px" }))
                    .appendTo(container);
            }
        },
        { dataField: "AgreementPercentage", caption: "(%)", alignment: "center", width: 100, dataType: 'string' },
        { dataField: "Date", caption: "Reg Date", alignment: "center", dataType: "date", width: 120, format: 'dd MMM yyyy' },
        { dataField: "EmailId", caption: "Email Id", alignment: "center", width: 180, dataType: "string" },
        { dataField: "TotalAmount", caption: "$ AMT", alignment: "right", format: "currency", width: 90, dataType: 'string' },
        { dataField: "PaidAmount", caption: "$ Paid", alignment: "right", format: "currency", width: 90, dataType: 'string' },
        {
            dataField: "ServiceName",
            caption: "Service",
            alignment: "center",
            format: "currency",
            width: 120,
            dataType: 'string',
            cellTemplate: function(container, options) {
                var str = "";
                if (options.value === "AOG (Art Of Getting Job)")
                    str = "AOG M";
                else if (options.value === "AOG (Art Of Getting Job) Training + Marketing")
                    str = "AOG TM";
                else if (options.value === "Training")
                    str = "AOG T";

                $("<div>").append($("<b>" + str + "</b>")).appendTo(container);
            }
        }
    ];

    $(function() {
        getNewCandidates();
        getCandidates();
    });

    function getNewCandidates() {
        //start getting data from GetNewCandidateTimeLine
        loadPanel.show();
        $.getJSON("@Url.Action("GetCandidate", "dashboard", new {@area = "SalesTeamLead"})?date=@DateTime.Now.ToString("yyyy-MM-dd")",
            null,
            function(data) {
                loadPanel.hide();
                var dataGrid = $("#gridNewCandidateTimeLineReport").dxDataGrid({
                    dataSource: data,
                    columns: columnsList,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Pending Candidate List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount').html('Total Records : ' + jQuery("#gridNewCandidateTimeLineReport").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');


            });
        //end getting data from GetNewCandidateTimeLine

    }

    function getCandidates() {
         //start getting data from GetCandidateTimeLine
         loadPanel.show();
        $.getJSON("@Url.Action("GetCandidate", "dashboard", new {@area = "SalesTeamLead"})",
            null,
            function (data) {
                loadPanel.hide();
                var dataGrid = $("#gridCandidateTimeLineReport").dxDataGrid({
                    dataSource: data,
                    columns: columnsList,
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },

                    export: {
                        enabled: true,
                        fileName: "Pending Candidate List",
                        allowExportSelectedData: true,
                        customizeExcelCell: options => {
                            if (options.gridCell.rowType === "header") {
                                options.backgroundColor = _dxGridHeaderBGColor;
                                options.font.color = _dxGridHeaderColor;
                            }
                        }
                    },
                    selection: { mode: "multiple" },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function(e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("CandidateStatus", "visible", false);
                    },
                    onExported: function(e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("CandidateStatus", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function(e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount1').html('Total Records : ' + jQuery("#gridCandidateTimeLineReport").dxDataGrid('instance').totalCount());
                    }


                }).dxDataGrid('instance');

                var applyFilterTypes = [
                    {
                        key: "auto",
                        name: "Immediately"
                    }, {
                        key: "onClick",
                        name: "On Button Click"
                    }
                ];

                var applyFilterModeEditor = $("#useFilterApplyButton").dxSelectBox({
                    items: applyFilterTypes,
                    value: applyFilterTypes[0].key,
                    valueExpr: "key",
                    displayExpr: "name",
                    onValueChanged: function(data) {
                        dataGrid.option("filterRow.applyFilter", data.value);
                    }
                }).dxSelectBox("instance");

                $("#filterRow").dxCheckBox({
                    text: "Filter Row",
                    value: true,
                    onValueChanged: function(data) {
                        dataGrid.clearFilter();
                        dataGrid.option("filterRow.visible", data.value);
                        applyFilterModeEditor.option("disabled", !data.value);
                    }
                });

                $("#headerFilter").dxCheckBox({
                    text: "Header Filter",
                    value: true,
                    onValueChanged: function(data) {
                        dataGrid.clearFilter();
                        dataGrid.option("headerFilter.visible", data.value);
                    }
                });

                function getOrderDay(rowData) {
                    return (new Date(rowData.OrderDate)).getDay();
                }

            });
        //end getting data from GetCandidateTimeLine

    }

    function showData(cid) {

        $.getJSON("@Url.Action("GetFollowUpJson", "ManageCandidate", new {@area = "SalesAssociate"})",
            { id: cid },
            function(data) {
                var url = "@Url.Action("GetFollowUpJson", "ManageCandidate", new {@area = "SalesAssociate"})";

            $("#loadFollowups").modal("show");
            var dataGrid = $("#gridFollowups").dxDataGrid({
                dataSource: data,
                allowColumnReordering: true,
                showBorders: true,
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true
                },
                paging: {
                    pageSize: 10
                },
                groupPanel: {
                    visible: true
                },
                columns: [
                    "FollowUpBy",
                    "FollowUpDate",
                    "FollowUpTime",
                    "FollowUpMessage",
                    "Department",
                    {
                        dataField: "FollowUpStatus",
                        groupIndex: 0
                    }
                ]
            }).dxDataGrid("instance");

            $("#autoExpand").dxCheckBox({
                value: true,
                text: "Expand All Groups",
                onValueChanged: function (data) {
                    dataGrid.option("grouping.autoExpandAll", data.value);
                }
            });


        });
    }
</script>

<div class="modal fade " id="loadFollowups">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myLargeModalLabel">Large modal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="col-lg-12">
                    <div id="gridFollowups"></div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
